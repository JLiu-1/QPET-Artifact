XCOMM ###################################################################
XCOMM #
XCOMM #  Start of QccPack Configuration (QccPack.config)
XCOMM #
XCOMM ###################################################################


XCOMM
XCOMM  Choose your build location (this should be set to the absolute 
XCOMM    path of the current directory, which is where QccPack will
XCOMM    be built)
XCOMM
QCCPACK = /Users/samuel/Git/SPECK2020/QccPack-0.61-1

XCOMM
XCOMM  Set the following to the desired final installation point for the 
XCOMM    libraries, header files, binaries, and man pages.  It is suggested
XCOMM    that these reside in /usr/local, but you could change
XCOMM    them to be elsewhere.  This needs to be an *absolute* pathname.
XCOMM
QCCPACK_INSTALL = /Users/samuel/Git/SPECK2020/QccPack-0.61-1/install

QCCPACK_INSTALL_LIB_PATH = $(QCCPACK_INSTALL)/lib
QCCPACK_INSTALL_INCLUDE_PATH = $(QCCPACK_INSTALL)/include
QCCPACK_INSTALL_BIN_PATH = $(QCCPACK_INSTALL)/bin
QCCPACK_INSTALL_MAN_PATH = $(QCCPACK_INSTALL)/man
QCCPACK_INSTALL_DATA_PATH = $(QCCPACK_INSTALL)/share/QccPack
QCCPACK_INSTALL_DOC_PATH = $(QCCPACK_INSTALL)/doc/QccPack

XCOMM
XCOMM Optional QccPack modules
XCOMM   Uncomment the following lines, as appropriate, to compile with
XCOMM   optional modules.  Be aware that these modules may not be licensed
XCOMM   under GPL/LGPL. Refer to the respective module documentation for
XCOMM   more information on each module.
XCOMM
XCOMM #define QCCPACK_SPIHT
#define QCCPACK_SPECK

XCOMM
XCOMM Multithreaded option
XCOMM   Uncomment the following lines if you want to use QccPack in
XCOMM   multithreaded applications. Currently, QccPack does not use
XCOMM   threads internally, but, by compiling the QccPack with
XCOMM   multithreading support enabled, an application program can
XCOMM   call QccPack functions from multiple threads simultaneously.
XCOMM   That is, enabling multithreading support renders the QccPack
XCOMM   library routines MT-safe. The pthreads library must be available
XCOMM   in order to support multithreading.
XCOMM
XCOMM #define USE_PTHREADS
XCOMM PTHREADS_INCLUDE_PATH = /usr/include
XCOMM PTHREADS_LIB_PATH = /usr/lib
XCOMM PTHREADS_LIB = -lpthread

XCOMM
XCOMM Mtrace option
XCOMM  Uncomment the following line to use mtrace() facility of glibc to
XCOMM  debug memory leaks and other memory-use pathologies. See mtrace(3)
XCOMM  for more information.
XCOMM
XCOMM #define USE_MTRACE

XCOMM
XCOMM GSL option
XCOMM   Uncomment the following lines if you want QccPack
XCOMM   to use the GNU Scientific Library (GSL). If GSL is not used,
XCOMM   certain functionality (e.g., KLT) will not be available.
XCOMM
XCOMM #define USE_GSL
XCOMM GSL_INCLUDE_PATH = /usr/include
XCOMM GSL_LIB_PATH = /usr/lib
XCOMM GSL_LIB = -lgsl -lgslcblas

XCOMM
XCOMM  Define the following to install HTML versions of the man pages.
XCOMM  If you don't want these pages, comment out the following lines
XCOMM
XCOMM #define HTMLMAN
XCOMM QCCPACK_INSTALL_HTML-MAN_PATH = $(QCCPACK_INSTALL_DOC_PATH)

XCOMM
XCOMM  Set to the desired compiler
XCOMM
XCOMM  -- GNU Compiler Collection (gcc) --
XCOMM CC = /usr/local/opt/llvm/bin/clang 
CC = clang
XCOMM
XCOMM  -- Intel C++ Compiler for Linux (icc) --
XCOMM CC = icc

XCOMM
XCOMM  Set to the desired compiler flags
XCOMM
XCOMM  -- GNU Compiler Collection (gcc) --
XCOMM CFLAGS = -Wall -stdlib=libc++ -I/usr/local/opt/llvm/include
CFLAGS = -Wall -g
XCOMM
XCOMM  -- Intel C++ Compiler for Linux (icc) --
XCOMM       The following optimizations are for Pentium II/III processors
XCOMM       with SIMD instructions. See icc -help for other options.
XCOMM CFLAGS = -O -tpp6 -axiMK
XCOMM       The following works for all Intel processors.
XCOMM CFLAGS = -O

XCOMM
XCOMM Static library (libQccPack.a) -- set appropriately
XCOMM
ARCHIVE = ar -r
RANLIB = ranlib

XCOMM
XCOMM Uncomment the following line to skip creation of the dynamic library,
XCOMM   in which case all the utility programs will be statically linked to
XCOMM   libQccPack.a
XCOMM
#define NO_DYNAMIC_LIB

XCOMM
XCOMM Dynamic library (libQccPack.so) -- set appropriately for the creation
XCOMM   of a shared object.  These definitions are ignored if NO_DYNAMIC_LIB
XCOMM   is defined above.
XCOMM
XCOMM   Set SHARED_OBJ_FLAGS to the option used by $(LD) to 
XCOMM   produce a shared object.
XCOMM
XCOMM  -- GNU Compiler Collection (gcc) --
SHARED_OBJ_FLAGS = -shared
CFLAGS += -fPIC
XCOMM LD = $(CC) -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib
LD = $(CC)
XCOMM
XCOMM  -- Intel C++ Compiler for Linux (icc) --
XCOMM SHARED_OBJ_FLAGS = -shared
XCOMM LD = $(CC)

XCOMM
XCOMM Set to the location of gzip, gunzip
XCOMM
QCCCOMPRESS = /bin/gzip
QCCUNCOMPRESS = /bin/gunzip
XCOMM QCCCOMPRESS = /bin/compress
XCOMM QCCUNCOMPRESS = /bin/uncompress


XCOMM
XCOMM Change these as needed
XCOMM
MKDIR = mkdir
RM = rm -f
CLEAN = $(RM)
RMDIR = $(RM) -r
MV = mv
COMPRESS = $(QCCCOMPRESS) -q
UNCOMPRESS = $(QCCUNCOMPRESS)
IMAKE = imake
LN = ln -sf

XCOMM
XCOMM If you have trouble with install, try cp and mkdir -p instead
XCOMM
INSTALL = cp
INSTALL_PATH = mkdir -p
XCOMM INSTALL = install
XCOMM INSTALL_PATH = $(INSTALL) -d

XCOMM
XCOMM If your compiler complains about not finding vsnprintf or
XCOMM   snprintf, uncomment the following line.  Note that not using
XCOMM	snprintf may make your installation of QccPack vunerable to
XCOMM	buffer-overflow attacks, so don't use QccPack in applications
XCOMM	where your system security is in question in this case.
XCOMM
XCOMM #define NO_SNPRINTF

XCOMM
XCOMM  Set for verbose output during make (useful for 
XCOMM    debugging the make process)
XCOMM
XCOMM #define QCCVERBOSEMAKE


XCOMM ###################################################################
XCOMM #
XCOMM #  End of QccPack Configuration (QccPack.config)
XCOMM #
XCOMM ###################################################################
