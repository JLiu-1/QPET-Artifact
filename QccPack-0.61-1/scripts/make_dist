#!/bin/sh

get_files()
{
    find bin -type f -printf "${PREFIX}/%p\n" >> $1
    find include -type f -printf "${PREFIX}/%p\n" >> $1
    find lib \( -type f -o -type l \) -a -name 'lib*' -printf \
	"${PREFIX}/%p\n" >> $1
    find man -type f -printf "${PREFIX}/%p.gz\n"  >> $1
    find doc -name '*.html' -printf "${DOC_PREFIX}/Html/%f\n" >> $1
    echo ${DOC_PREFIX}/Html/index.html >> $1
    find doc ! -name '*.html' -a -type f -printf "${DOC_PREFIX}/%f\n" >> $1
    echo /usr/share/QccPack >> $1
}


if [ $# -ne 1 ]; then
    echo 'usage: make_dist <release>'
    exit 0
else
    RELEASE=$1
fi

QCCPACK_PATH=/home/fowler/QccPack
QCCPACK_MODULES="QccPackSPIHT QccPackSPECK"

MAKE="make --no-print"

cd $QCCPACK_PATH

echo 'Making backup...'
cd ..
tar zcf QccPack.bak.tgz `basename $QCCPACK_PATH`

cd $QCCPACK_PATH

echo 'Setting version...'
MAJOR_VERSION=`fgrep Major ./src/libQccPack/lib/version.h | cut -d ' ' -f 3`
MINOR_VERSION=`fgrep Minor ./src/libQccPack/lib/version.h | cut -d ' ' -f 3`
VERSION=$MAJOR_VERSION.$MINOR_VERSION

echo 'Setting date...'
DATE=`date "+%d-%b-%Y" | tr "[:upper:]" "[:lower:]"`

echo
echo "  QccPack Version $VERSION $DATE"
echo

PREFIX=/usr
DOC_PREFIX=${PREFIX}/doc/QccPack-${MAJOR_VERSION}.${MINOR_VERSION}

FILELIST=../QccPack-${MAJOR_VERSION}.${MINOR_VERSION}.filelist.txt
FILELIST_MODULES=../QccPackModules-${MAJOR_VERSION}.${MINOR_VERSION}.filelist.txt

echo 'Cleaning...'
$MAKE clean > /dev/null 2>&1

echo 'Changing date...'
scripts/substr -e `basename $0` XX-XXX-XXXX $DATE . > /dev/null 2>&1

echo 'Changing version...'
scripts/substr -e `basename $0` X.XX $VERSION . > /dev/null 2>&1

rm -rf $FILELIST
rm -rf $FILELIST_MODULES
echo 'Making filelists...'
echo '  Editing QccPack.config for building with modules...'
sed -e 's^XCOMM #define QCCPACK^#define QCCPACK^g' QccPack.config > tmp.file
mv tmp.file QccPack.config
imake
$MAKE Makefiles > /dev/null 2>&1
echo '  Cleaning...'
$MAKE clean > /dev/null 2>&1
echo '  Editing QccPack.config for building without modules...'
sed -e 's^#define QCCPACK^XCOMM #define QCCPACK^g' QccPack.config > tmp.file
mv tmp.file QccPack.config
echo '  Building without modules...'
echo '    Making Makefiles...'
imake
$MAKE Makefiles > /dev/null 2>&1
echo '    Making HTML man pages...'
$MAKE make.html-man > /dev/null 2>&1
echo '    Building...'
$MAKE install > /dev/null 2>&1
echo '  Making filelist...'
get_files $FILELIST

echo '  Editing QccPack.config for building with modules...'
sed -e 's^XCOMM #define QCCPACK^#define QCCPACK^g' QccPack.config > tmp.file
mv tmp.file QccPack.config
echo '  Building with modules...'
echo '    Making Makefiles...'
imake
$MAKE Makefiles > /dev/null 2>&1
echo '    Making HTML man pages...'
$MAKE make.html-man > /dev/null 2>&1
echo '    Building...'
$MAKE install > /dev/null 2>&1
echo '  Making filelist...'
get_files $FILELIST_MODULES.tmp
diff --unchanged-line-format= \
    $FILELIST $FILELIST_MODULES.tmp > $FILELIST_MODULES
echo ${PREFIX}/lib/libQccPackModules.a >> $FILELIST_MODULES
echo ${PREFIX}/lib/libQccPackModules.so >> $FILELIST_MODULES
rm -rf $FILELIST_MODULES.tmp

echo 'Making documentation tar file...'
(cd doc/QccPack ; \
tar cf ../../../QccPack-$VERSION-$RELEASE.doc.tar * ; \
gzip -f ../../../QccPack-$VERSION-$RELEASE.doc.tar)

echo
echo 'Cleaning...'
$MAKE clean > /dev/null 2>&1

echo 'Removing development directories...'
$MAKE dist > /dev/null 2>&1

echo 'Removing Makefiles...'
find . -name Makefile -exec rm -rf {} \;

echo 'Removing QccPack.config for distribution...'
rm QccPack.config

echo 'Making CVS-ready tar file...'
(cd .. ; \
tar cf QccPack-$VERSION-$RELEASE.cvs.tar `basename $QCCPACK_PATH`; \
gzip -f QccPack-$VERSION-$RELEASE.cvs.tar)

echo 'Removing CVS dirs...'
find . -name CVS -prune -exec rm -rf {} \;

MODULE_FILE=/tmp/modules.txt
rm -rf $MODULE_FILE
for i in $QCCPACK_MODULES
do
    echo `basename $QCCPACK_PATH`/src/lib$i >> $MODULE_FILE
done

echo 'Making tar file of main distribution...'
cd ..
tar cfX QccPack-$VERSION-$RELEASE.tar $MODULE_FILE `basename $QCCPACK_PATH`
gzip -f QccPack-$VERSION-$RELEASE.tar

cd $QCCPACK_PATH
for i in $QCCPACK_MODULES
do
    echo "Making tar file of $i module..."
    tar cf ../$i-$VERSION-$RELEASE.tar src/lib$i
    gzip -f ../$i-$VERSION-$RELEASE.tar
done

rm -rf $MODULE_FILE

echo 'Done.'

