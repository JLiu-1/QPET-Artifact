.TH DATTOIMG 1 "QCCPACK" ""
.SH NAME
dattoimg \- converts dataset to image
.SH SYNOPSIS
.B dattoimg
.RB "[\|" \-tw
.IR  tilewidth "\|]"
.RB "[\|" \-th
.IR tileheight "\|]"
.I imagewidth
.I imageheight
.I datfiles...
.I imgfile
.SH DESCRIPTION
.LP
.B dattoimg
converts one or more datasets,
.IR datfile ,
in DAT format,
to an image,
.IR imgfile .
Each one-dimensional vector in each
.I datfile
is assembled into a two-dimensional tile
and then placed in
.IR imgfile .
The tiles are read sequentially from
.I datfile
and placed into
.I imgfile
in raster-scan order.
The options
.B \-tw 
and 
.B \-th 
are used to specify that
rectangular tiles of dimension 
.I tilewidth 
x 
.I tileheight 
are written to
.I imgfile 
from vectors of the same size from 
.IR datfile .
In the absence of 
.B \-tw 
and 
.BR \-th , 
square tiles of 
.RI sqrt( v ") x sqrt(" v )
are written to imgfile, where 
.I v 
is the vector dimension
of the vectors in
.I datfile 
.RI ( v " must be a perfect square)."
Note: both
.B \-tw
and 
.B \-th
must be specified for rectangular tiles, and, if specified,
.IR tilewidth " * " tileheight
must be equal to
.IR v .
.LP
.BR dattoimg
determines the type of the output image by calling
.BR QccIMGImageDetermineType (3).
If the output image is determined to be grayscale, then exactly one
.I datfile
is expected to be specified to
.BR dattoimg .
Otherwise, if the output image is determined to be a color image, then
exactly three
.I datfiles
are expected to be specified to
.BR dattoimg ,
and the three
.I datfiles
give the Y, U, and V image components in that order.
.LP
.I imagewidth
and
.I imageheight
give the size of 
.I imgfile
and must be specified.
If
.I imagewidth
or
.I imageheight
are not multiples of the requested tile size,
additional rows and/or columns are appended to the bottom
and/or right of the image as necessary to meet the
requested size.
These rows and/or columns are duplicates of the last full row or
column available in the image.
.LP
.BR dattoimg
calls
.BR QccIMGDatasetToImageComponent (3)
for each image component in the image.
.LP
Note: converting from DAT format to PGM or PPM image format implies converting
floating-point values to integer-valued pixels.
Floating-point values are consequently rounded down and clipped to
the range 0-255; see
.BR QccIMGImageComponentClipPixel (3).
.SH "SEE ALSO"
.BR imgtodat (1),
.BR QccIMGImageDetermineType (3),
.BR QccIMGImageComponentClipPixel (3),
.BR QccIMGDatasetToImageComponent (3),
.BR QccPackIMG (3),
.BR QccPack (3)

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
