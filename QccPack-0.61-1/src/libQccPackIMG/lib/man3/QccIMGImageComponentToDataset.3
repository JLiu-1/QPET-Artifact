.TH QCCIMGIMAGECOMPONENTTODATASET 3 "QCCPACK" ""
.SH NAME
QccIMGImageComponentToDataset,
QccIMGDatasetToImageComponent
\- 
convert image component to/from dataset
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccIMGImageComponentToDataset(const QccIMGImageComponent *" image_component ", QccDataset *" dataset ", int " tile_num_rows ", int " tile_num_cols );
.br
.sp
.BI "int QccIMGDatasetToImageComponent(QccIMGImageComponent *" image_component ", const QccDataset *" dataset ", int " tile_num_rows ", int " tile_num_cols );
.SH DESCRIPTION
.BR QccIMGImageComponentToDataset()
converts
.IR image_component ,
a
.BR QccIMGImageComponent
structure, to
.IR dataset ,
a
.BR QccDataset
structure.
Two-dimensional tiles of size
.IR tile_num_rows
by
.IR tile_num_cols
are extracted from 
.I image_component
in raster-scan order, converted to one-dimensional
vectors of length
.IR tile_num_rows " x " tile_num_cols ,
and placed sequentially into
.IR dataset .
If
.IR image_component
does not have size that is a multiple of the requested tile size,
then tiles are extracted from the upper-left part of the image.  Leftover
rows and/or columns at the bottom and right sides of the image, if any,
are ignored and not output to
.IR dataset .
If
.IR dataset
is not allocated prior to calling
.BR QccIMGImageComponentToDataset() ,
.IR dataset
is allocated to accommodate the number of tiles that will be generated;
.IR dataset->access_block_size
is set equal to
.BR QCCDATASET_ACCESSWHOLEFILE .
On the other hand, if
.IR dataset
is allocated, its block size (as returned by
.BR QccDatasetGetBlockSize (3))
must be large enough to accommodate
the number of tiles that will be generated.
.LP
.BR QccIMGDatasetToImageComponent()
converts
.IR dataset ,
a
.BR QccDataset
structure, to
.IR image_component ,
a
.BR QccIMGImageComponent
structure. Each one-dimensional vector in
.I dataset
is assembled into a two-dimensional tile and then placed in
.IR image_component .
The tiles are taken sequentially from
.I dataset
and placed into
.I image_component
in raster-scan order.
.IR image_component
must be allocated prior to calling
.BR QccIMGDatasetToImageComponent() .
If the size of the
.IR image_component
is not a multiple of the requested tile size,
additional rows and/or columns are appended to the bottom
and/or right of the image as necessary to meet the
requested size.
These rows and/or columns are duplicates of the last full row or
column available in
.IR image_component .
.SH "RETURN VALUE"
These routines return 0 on success, 1 on failure.
.SH "SEE ALSO"
.BR QccIMGImageComponent (3),
.BR QccDataset (3),
.BR QccPackIMG (3),
.BR QccPack (3)

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
