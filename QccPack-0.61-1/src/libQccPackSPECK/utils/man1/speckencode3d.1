.TH SPECKENCODE3D 1 "QCCPACK" ""
.SH NAME
speckencode3d, speckdecode3d \-
encode/decode an image cube using the 3D-SPECK algorithm
.SH SYNOPSIS
.sp
.B speckencode3d
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-nl
.IR  num_levels "\|]"
.RB "[\|" \-sl
.IR  spatial_num_levels "\|]"
.RB "[\|" \-tl
.IR  temporal_num_levels "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-vo "\|]"
.I rate
.I icbfile
.I bitstream
.LP
.B speckdecode3d
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-r
.IR  rate "\|]"
.I bitstream
.I icbfile
.SH OPTIONS
.TP
.BI \-w " wavelet"
String. 
Name of the wavelet file
.RB ( FBK
or
.B LFT
format); default = "CohenDaubechiesFeauveau.9-7.lft"
.TP
.BI \-b " boundary"
String. Type of boundary extension; default = "symmetric".
.TP 
.BI \-nl " num_levels"
Integer. Number of levels of dyadic decomposition; default value is 5 levels.
.TP 
.BI \-sl " spatial_num_levels"
Integer. Number of levels of dyadic decomposition; no default value.
.TP 
.BI \-tl " temporal_num_levels"
Integer. Number of levels of dyadic decomposition; no default value.
.TP
.BI \-m " mask"
String. Name of file containing the transparency mask for
shape-adaptive coding. Default is to not use a mask.
.TP
.BI \-r " rate"
Float. Rate at which to stop decoding. Default is to decode until
end of input bitstream is reached.
.TP
.B \-vo
Print only the value of the rate to stdout (terse output);
default is verbose output.
.SH DESCRIPTION
.LP
.B speckencode3d
codes an image cube,
.IR icbfile ,
using the 3D-SPECK algorithm by Tang
.IR "et al" .
The 3D-SPECK algorithm involves a 3D DWT followed by 
a progressive "bitplane" coding of the wavelet coefficients using a
cube-splitting quantization structure based on octtrees.
.LP
The transform is either the usual discrete
wavelet transform (DWT) or a shape-adaptive
DWT (SA-DWT) and can be either a dyadic or wavelet-packet
decomposition; see
.BR QccSPECK3DEncode (3)
for complete details.
Option
.B \-w
specifies the wavelet, 
option
.B \-b
specifies the boundary extension.
The
.B \-m
option gives the image-cube file to be used as a transparency mask
for the SA-DWT.
.I mask
must be a grayscale image cube
in which black in this image cube indicates transparency, white
indicates full opacity, and gray tones are degrees of translucence
(see
.BR QccAlpha (3)).
If the
.B \-m
option is not given, the usual, full-volume DWT is used.
.LP
The
.BR \-nl ,
.BR \-sl ,
and
.BR \-tl
options determine whether a dyadic or wavelet-packet transform is used.
If
.B \-nl
is specified, a dyadic transform is used. In this case,
.IR num_levels
is the number of decompositions in all three directions.
If either
.B \-sl
or
.BR \-tl ,
or
both, is specified, a wavelet-packet transform is used.
In this case,
.I spatial_num_levels
and
.I temporal_num_levels
give the number of decompositions spatially and temporally, respectively,
of the packet transform. If only one of
.B \-sl
and
.B \-tl
is given, then the same number of decompositions
is used spatially and temporally.
In the case that none of
.BR \-nl ,
.BR \-sl ,
and
.BR \-tl 
is specified, then a dyadic decomposition with the default value of
.I num_levels
is used.
.LP
The desired bitrate of the output
.I bitstream
is specified by
.IR rate ,
which is expressed in bits per voxel of the original image.
.B speckencode3d
normally prints to stdout a small amount of information
concerning this target bitrate and the actual bitrate achieved.
Usually these rates are identical, but may differ slightly.
If the 
.B \-vo
(value-only) option is given, all printed output is suppressed except for
the actual bitrate.
.LP
.B speckdecode3d
performs the corresponding decoding using the 3D-SPECK algorithm, decoding
the
.I bitstream
made by
.B speckencode3d
and producing
a reconstructed image cube,
.IR icbfile .
For sane results, 
.IR wavelet 
and
.IR boundary 
should be the same as they were for
.BR speckencode3d ,
and
.I mask
should be the same if an SA-DWT was used as the transform.
If a decoding rate is specified with the
.B \-r
option, then
.B speckdecode3d
stops decoding when
.I rate
bits per voxel from the input bitstream
have been decoded. Otherwise, decoding stops when the
end of the input bitstream is reached.
.LP
.BR speckencode3d
and
.BR speckdecode3d
call
.BR QccSPECK3DEncode (3)
and
.BR QccSPECK3DDecode (3),
respectively, to perform 3D-SPECK encoding and decoding.
Refer to the man pages for these functions for more information
on the details of the QccPack implementation of the 3D-SPECK algorithm.
.SH "SEE ALSO"
.BR QccSPECK3DEncode (3),
.BR QccSPECK3DDecode (3),
.BR QccWAVSubbandPyramid3D (3),
.BR QccPackWAV (3),
.BR QccPackIMG (3),
.BR QccPack (3)

X. Tang, W. A. Pearlman, and J. W. Modestino,
"Hyperspectral Image Compression Using Three-Dimensional
Wavelet Coding,"
in
.IR "Image and Video Communications and Processing" ,
Santa Clara, CA, January 2003, Proc. SPIE 5022, pp. 1037-1047.

W. A. Pearlman, A. Islam, N. Nagaraj, and A. Said,
"Efficient, Low-Complexity Image Coding with a Set-Partitioning
Embedded Block Coder,"
.IR "IEEE Transactions on Circuits and Systems for Video Technology" ,
to appear, 2003.

A. Islam and W. A. Pearlman,
"An Embedded and Efficient Low-Complexity Hierarchical Image Coder,"
in
.IR "Visual Communications and Image Processing" ,
K. Aizawa, R. L. Stevenson, and Y.-Q. Zhang, Eds., San Jose, CA,
January 1999, Proc. SPIE 3653, pp. 294-305.

Z. Lu and W. A. Pearlman,
"Wavelet Video Coding of Video Object by Object-Based SPECK Algorithm,"
in
.IR "Proceedings of the Picture Coding Symposium" ,
Seoul, Korea, April 2001, pp. 413-416.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


