.TH QCCFILTERVECTOR 3 "QCCPACK" ""
.SH NAME
QccFilterVector \- perform FIR filtering of a one-dimensional signal
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccFilterVector(const QccVector " input_signal ", QccVector " output_signal ", int " length ", const QccFilter *" filter ", int " boundary_extension );
.SH DESCRIPTION
.B QccFilterVector()
implements the one-dimensional FIR filtering of a signal.
.I filter
gives the FIR filter,
.I input_signal
is the one-dimensional input signal (of
.B QccVector
data type) to be filtered, and
.I output_signal
is the resulting filtered signal.
Sufficient storage space for
.I output_signal
must be allocated
(by a call to
.BR QccVectorAlloc (3))
prior to calling
.BR QccFilterVector() .
.I length
gives the length of the input and signals.
.LP
The FIR filtering operation is implemented by
a time-domain convolution of finite-length signals.
.I boundary_extension
informs
.B QccFilterVector()
of the method to employ to handle the left and right signal boundaries in
this convolution.
Possible values of
.I boundary_extension
are
.BR QCCFILTER_SYMMETRIC_EXTENSION ,
or
.BR QCCFILTER_PERIODIC_EXTENSION .
In the case of
.BR QCCFILTER_SYMMETRIC_EXTENSION ,
when the filter overlaps a signal boundary during convolution,
the data points beyond the boundary are "mirrored"
back into the signal.  That is, the input signal is assumed to be symmetric
at the signal boundary.
In the case of
.BR QCCFILTER_PERIODIC_EXTENSION ,
when the filter overlaps a signal boundary during convolution,
the data points beyond the boundary are "wrapped around" to the
other end of the signal.  That is, the input signal is assumed to
be one period of an infinite length periodic signal.
.LP
When
.I boundary_extension
is equal to
.BR QCCFILTER_SYMMETRIC_EXTENSION ,
whole-sample symmtery is used, unless
.I filter
is a half-sample symmetric filter
(i.e.,
.IR filter -> causality
is equal to
.BR QCCFILTER_SYMMETRICHALF ),
in which case half-sample symmetry is used.
.SH "RETURN VALUE"
.B QccFilterVector()
returns 0 on success, 1 on failure.
.SH "SEE ALSO"
.BR QccFilterMultiRateFilterVector (3),
.BR QccFilter (3),
.BR QccVector (3),
.BR QccPack (3)
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
