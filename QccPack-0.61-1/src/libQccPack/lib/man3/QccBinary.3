.TH QCCBINARY 3 "QCCPACK" ""
.SH NAME
QccBinaryCharToInt,
QccBinaryIntToChar,
QccBinaryCharToFloat,
QccBinaryFloatToChar
\- convert integers and floating-point values into character arrays
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.B #define QCC_INT_SIZE 4
.br
.sp
.BI "int QccBinaryCharToInt(const unsigned char *" ch ", unsigned int *" val );
.br
.BI "int QccBinaryIntToChar(unsigned int " val ", unsigned char *" ch );
.br
.BI "int QccBinaryCharToFloat(const unsigned char *" ch ", float *" val );
.br
.BI "int QccBinaryFloatToChar(float " val ", unsigned char *" ch );
.SH DESCRIPTION
All binary-valued numbers stored to files by QccPack have their
most-significant byte (MSB) written first.
However, whether the host computer stores binary values 
in MSB-first (Big Endian) or LSB-first (Little Endian)
format depends on the architecture of machine.
These routines convert between 
the MSB-first values used in QccPack files
and
.B int
or
.B float
values with the host byte order.  
Thus, files written by QccPack programs should then
be portable across different architectures.
.LP
For each of the routines,
.I ch
is an array of characters containing
.B QCC_INT_SIZE
bytes.
.LP
.B QccBinaryCharToInt()
converts a MSB-first
.BR QCC_INT_SIZE -length
character array to an
.BR int .
.B QccBinaryIntToChar()
converts an
.B int
to a MSB-first
.BR QCC_INT_SIZE -length
character array.
.LP
.B QccBinaryCharToFloat()
converts a MSB-first
.BR QCC_INT_SIZE -length
character array to an
.BR float .
.B QccBinaryFloatToChar()
converts an
.B float
to a MSB-first
.BR QCC_INT_SIZE -length
character array.
.SH "SEE ALSO"
.BR QccPack (3)
.SH NOTES
These routines rely on 
.B int
and
.B float
values being 
.B QCC_INT_SIZE
(four) bytes long (i.e., 32-bit values).
Although it seems that this is the case for modern computer systems,
some 64-bit systems might use longer values.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
