# Makefile generated by imake - do not edit!

# ###################################################################
# #
# #  Start of QccPack Imake.tmpl
# #
# ###################################################################

# ###################################################################
# #
# #  Start of QccPack Configuration (QccPack.config)
# #
# ###################################################################

#
#  Choose your build location (this should be set to the absolute
#    path of the current directory, which is where QccPack will
#    be built)
#
QCCPACK = /home/shaomeng/Syncthing/Vapor-Dev/QccPack/QccPack-cisl-vapor

#
#  Set the following to the desired final installation point for the
#    libraries, header files, binaries, and man pages.  It is suggested
#    that these reside in /usr/local, but you could change
#    them to be elsewhere.  This needs to be an *absolute* pathname.
#
QCCPACK_INSTALL = /home/shaomeng/Syncthing/Vapor-Dev/QccPack/QccPack-cisl-vapor/install

QCCPACK_INSTALL_LIB_PATH = $(QCCPACK_INSTALL)/lib
QCCPACK_INSTALL_INCLUDE_PATH = $(QCCPACK_INSTALL)/include
QCCPACK_INSTALL_BIN_PATH = $(QCCPACK_INSTALL)/bin
QCCPACK_INSTALL_MAN_PATH = $(QCCPACK_INSTALL)/man
QCCPACK_INSTALL_DATA_PATH = $(QCCPACK_INSTALL)/share/QccPack
QCCPACK_INSTALL_DOC_PATH = $(QCCPACK_INSTALL)/doc/QccPack

#
# Optional QccPack modules
#   Uncomment the following lines, as appropriate, to compile with
#   optional modules.  Be aware that these modules may not be licensed
#   under GPL/LGPL. Refer to the respective module documentation for
#   more information on each module.
#
# #define QCCPACK_SPIHT

#
# Multithreaded option
#   Uncomment the following lines if you want to use QccPack in
#   multithreaded applications. Currently, QccPack does not use
#   threads internally, but, by compiling the QccPack with
#   multithreading support enabled, an application program can
#   call QccPack functions from multiple threads simultaneously.
#   That is, enabling multithreading support renders the QccPack
#   library routines MT-safe. The pthreads library must be available
#   in order to support multithreading.
#
# #define USE_PTHREADS
# PTHREADS_INCLUDE_PATH = /usr/include
# PTHREADS_LIB_PATH = /usr/lib
# PTHREADS_LIB = -lpthread

#
# Mtrace option
#  Uncomment the following line to use mtrace() facility of glibc to
#  debug memory leaks and other memory-use pathologies. See mtrace(3)
#  for more information.
#
# #define USE_MTRACE

#
# GSL option
#   Uncomment the following lines if you want QccPack
#   to use the GNU Scientific Library (GSL). If GSL is not used,
#   certain functionality (e.g., KLT) will not be available.
#
# #define USE_GSL
# GSL_INCLUDE_PATH = /usr/include
# GSL_LIB_PATH = /usr/lib
# GSL_LIB = -lgsl -lgslcblas

#
#  Define the following to install HTML versions of the man pages.
#  If you don't want these pages, comment out the following lines
#
# #define HTMLMAN
# QCCPACK_INSTALL_HTML-MAN_PATH = $(QCCPACK_INSTALL_DOC_PATH)

#
#  Set to the desired compiler
#
#  -- GNU Compiler Collection (gcc) --
CC = clang
#
#  -- Intel C++ Compiler for Linux (icc) --
# CC = icc

#
#  Set to the desired compiler flags
#
#  -- GNU Compiler Collection (gcc) --
CFLAGS = -Wall
#
#  -- Intel C++ Compiler for Linux (icc) --
#       The following optimizations are for Pentium II/III processors
#       with SIMD instructions. See icc -help for other options.
# CFLAGS = -O -tpp6 -axiMK
#       The following works for all Intel processors.
# CFLAGS = -O

#
# Static library (libQccPack.a) -- set appropriately
#
ARCHIVE = ar -r
RANLIB = ranlib

#
# Uncomment the following line to skip creation of the dynamic library,
#   in which case all the utility programs will be statically linked to
#   libQccPack.a
#

#
# Dynamic library (libQccPack.so) -- set appropriately for the creation
#   of a shared object.  These definitions are ignored if
#   is defined above.
#
#   Set SHARED_OBJ_FLAGS to the option used by $(LD) to
#   produce a shared object.
#
#  -- GNU Compiler Collection (gcc) --
SHARED_OBJ_FLAGS = -shared
CFLAGS += -fPIC
LD = $(CC)
#
#  -- Intel C++ Compiler for Linux (icc) --
# SHARED_OBJ_FLAGS = -shared
# LD = $(CC)

#
# Set to the location of gzip, gunzip
#
QCCCOMPRESS = /bin/gzip
QCCUNCOMPRESS = /bin/gunzip
# QCCCOMPRESS = /bin/compress
# QCCUNCOMPRESS = /bin/uncompress

#
# Change these as needed
#
MKDIR = mkdir
RM = rm -f
CLEAN = $(RM)
RMDIR = $(RM) -r
MV = mv
COMPRESS = $(QCCCOMPRESS) -q
UNCOMPRESS = $(QCCUNCOMPRESS)
IMAKE = imake
LN = ln -sf

#
# If you have trouble with install, try cp and mkdir -p instead
#
INSTALL = cp
INSTALL_PATH = mkdir -p
# INSTALL = install
# INSTALL_PATH = $(INSTALL) -d

#
# If your compiler complains about not finding vsnprintf or
#   snprintf, uncomment the following line.  Note that not using
#	snprintf may make your installation of QccPack vunerable to
#	buffer-overflow attacks, so don't use QccPack in applications
#	where your system security is in question in this case.
#
# #define NO_SNPRINTF

#
#  Set for verbose output during make (useful for
#    debugging the make process)
#
# #define QCCVERBOSEMAKE

# ###################################################################
# #
# #  End of QccPack Configuration (QccPack.config)
# #
# ###################################################################

QCCPACK_LIBRARY_NAME = QccPack

#  Static library
QCCPACK_STATIC_LIB = lib$(QCCPACK_LIBRARY_NAME).a

#  Dynamic library
QCCPACK_DYNAMIC_LIB = lib$(QCCPACK_LIBRARY_NAME).so

QCCPACK_LIB_PATH = $(QCCPACK)/lib
QCCPACK_INCLUDE_PATH = $(QCCPACK)/include
MAN_INSTALL_PATH = $(QCCPACK_INSTALL_MAN_PATH)/man$(MAN_SUFFIX)

QCCPACK_DATA_PATH = $(QCCPACK_INSTALL_DATA_PATH)

QCCPACK_SOURCEFORGE_LOGO = $(QCCPACK)/logo.sed

EXTRA_INCLUDES = $(PTHREADS_INCLUDE_FLAGS) $(GSL_INCLUDE_FLAGS)

INCLUDES = -I$(QCCPACK_INCLUDE_PATH) $(EXTRA_INCLUDES)

EXTRA_LIBS = $(PTHREADS_LIB_FLAGS) $(GSL_LIB_FLAGS)

LIBS = -L$(QCCPACK_LIB_PATH) -l$(QCCPACK_LIBRARY_NAME) \
     $(EXTRA_LIBS) -lm

GZIP_FLAGS = -DQCCCOMPRESS=$(QCCCOMPRESS) -DQCCUNCOMPRESS=$(QCCUNCOMPRESS)
ENV_FLAGS = \
          -DQCCPACK_WAVELET_PATH_DEFAULT=.:$(QCCPACK_DATA_PATH)/Wavelets \
          -DQCCPACK_CODES_PATH_DEFAULT=.:$(QCCPACK_DATA_PATH)/Codes

SPECK_MODULE = -DHAVE_SPECK

MODULE_FLAGS = \
     $(SPIHT_MODULE) \
     $(SPECK_MODULE)

EXTRA_FLAGS = \
	$(GZIP_FLAGS) \
	$(ENV_FLAGS) \
	$(SNPRINTF_FLAG) \
	$(MODULE_FLAGS) \
	$(PTHREADS_FLAGS) \
	$(GSL_FLAGS) \
        $(MTRACE_FLAG)

LDFLAGS = $(LIBS)

RMAN = rman -b -f HTML -r %s.%s.html
SED = sed

IMAKE_CMD = $(IMAKE) -I$(QCCPACK)

UNCOMPRESS_FILES = *.Z *.gz

.c.o:
	@echo "Compiling $*.c"
	@$(CC) $(CFLAGS) $(INCLUDES) $(EXTRA_FLAGS) -c $*.c

.c:
	@echo "Compiling $@"
	@$(CC) $(CFLAGS) $(INCLUDES) $(EXTRA_FLAGS) -o $@ $@.c $(LDFLAGS)

# ###################################################################
# #
# #  Start of QccPack Imakefile
# #
# ###################################################################

CURRENT_DIR = $(QCCPACK)/src/libQccPackSQ/lib

OBJS =  \
	scalar_quantizer.o \
	sq.o lloyd.o

MAN_PAGES = QccPackSQ
MAN_SUFFIX = 3

HEADER = libQccPackSQ.h

clean::
	@$(CLEAN) $(CLEAN_FILES)
compress::
	@echo "Compressing files in $(CURRENT_DIR)"
	-@for j in $(COMPRESS_FILES) ; \
	do \
	(if (test -f $$j) ; \
	then $(COMPRESS) $$j ; \
	fi) \
	done
uncompress::
	@echo "Uncompressing files in $(CURRENT_DIR)"
	-@for j in $(UNCOMPRESS_FILES) ; \
	do \
	(if (test -f $$j) ; \
	then $(UNCOMPRESS) $$j ; \
	fi) \
	done

CLEAN_FILES = *~ *.bak core $(OBJS) $(LIB)
COMPRESS_FILES = *.c *.h *.html *.$(MAN_SUFFIX)
Makefiles::
make.libheader:
	-@if (test ! -d $(QCCPACK_INCLUDE_PATH)) ; \
		then $(INSTALL_PATH) $(QCCPACK_INCLUDE_PATH) ; \
	fi
	-@for i in $(HEADER) ; \
	do \
	(if (test -r $$i) ; \
	then $(INSTALL) $$i $(QCCPACK_INCLUDE_PATH) ; \
	fi) \
	done
uninstall::
	-@for i in $(HEADER) ; \
	do \
	$(RM) $(QCCPACK_INCLUDE_PATH)/$$i ; \
	done

make.lib: $(OBJS)
	@echo "Installing object files for library creation..."
	-@if (test ! -d $(QCCPACK_LIB_PATH)) ; \
		then $(INSTALL_PATH) $(QCCPACK_LIB_PATH) ; \
	fi
	-@if (test ! -d $(QCCPACK_LIB_PATH)) ; \
		then $(INSTALL_PATH) $(QCCPACK_LIB_PATH) ; \
	fi
	-@for i in $(OBJS) ; \
	do \
	(if (test -r $$i) ; \
	then $(INSTALL) $$i $(QCCPACK_LIB_PATH) ; \
	fi) \
	done
install.libheader:
	-@if (test ! -d $(QCCPACK_INSTALL_INCLUDE_PATH)) ; \
		then $(INSTALL_PATH) $(QCCPACK_INSTALL_INCLUDE_PATH) ; \
	fi
	-@for i in $(HEADER) ; \
	do \
	(if (test -r $$i) ; \
	then $(INSTALL) $$i $(QCCPACK_INSTALL_INCLUDE_PATH) ; \
	fi) \
	done
uninstall::
	-@for i in $(HEADER) ; \
	do \
	$(RM) $(QCCPACK_INSTALL_INCLUDE_PATH)/$$i ; \
	done
MAN_INSTALL_PATH = $(QCCPACK_INSTALL_MAN_PATH)/man$(MAN_SUFFIX)
install.man::
	-@if (test ! -d $(MAN_INSTALL_PATH)) ; \
		then $(INSTALL_PATH) $(MAN_INSTALL_PATH) ; \
	fi
	-@for i in $(MAN_PAGES) ; \
	do \
	(if (test -r man$(MAN_SUFFIX)/$$i.$(MAN_SUFFIX)) ; \
	then $(INSTALL) man$(MAN_SUFFIX)/$$i.$(MAN_SUFFIX) \
		$(MAN_INSTALL_PATH) ; \
	fi) \
	done
uninstall::
	-@for i in $(MAN_PAGES) ; \
	do \
	$(RM) $(MAN_INSTALL_PATH)/$$i.$(MAN_SUFFIX) ; \
	done
clean::
	-@if (test -d man$(MAN_SUFFIX)) ; \
		then (cd man$(MAN_SUFFIX); $(CLEAN) $(CLEAN_FILES)); \
	fi
make.html-man::
	-@if (test ! -d html-man) ; \
		then $(INSTALL_PATH) html-man ; \
	fi
	-@for i in $(MAN_PAGES) ; \
	do \
	(if (test -r man$(MAN_SUFFIX)/$$i.$(MAN_SUFFIX)) ; \
	then $(RMAN) -l $$i.$(MAN_SUFFIX) \
		man$(MAN_SUFFIX)/$$i.$(MAN_SUFFIX) | \
		$(SED) -f $(QCCPACK_SOURCEFORGE_LOGO) > \
		html-man/$$i.$(MAN_SUFFIX).html ; \
	fi) \
	done
install.html-man::
	-@if (test ! -d $(QCCPACK_INSTALL_HTML-MAN_PATH)) ; \
		then $(INSTALL_PATH) $(QCCPACK_INSTALL_HTML-MAN_PATH) ; \
	fi
	-@for i in $(MAN_PAGES) ; \
	do \
	(if (test -r html-man/$$i.$(MAN_SUFFIX).html) ; \
	then $(INSTALL) html-man/$$i.$(MAN_SUFFIX).html \
	     $(QCCPACK_INSTALL_HTML-MAN_PATH) ; \
	fi) \
	done
uninstall::
	-@for i in $(MAN_PAGES) ; \
	do \
	$(RM) $(QCCPACK_INSTALL_HTML-MAN_PATH)/$$i.$(MAN_SUFFIX).html ; \
	done

# ###################################################################
# #
# #  End of QccPack Imakefile
# #
# ###################################################################

# ###################################################################
# #
# #  End of QccPack Imake.tmpl
# #
# ###################################################################

