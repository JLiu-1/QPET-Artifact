.TH MESH_MEMC 1 "QCCPACK" ""
.SH NAME
mesh_memc \- 
motion estimation and compensation using regular triangle meshes
.SH SYNOPSIS
.B mesh_memc 
.RB "[\|" \-fp "\|]"
.RB "[\|" \-hp "\|]"
.RB "[\|" \-qp "\|]"
.RB "[\|" \-ep "\|]"
.RB "[\|" \-f1 
.IR filter1 "\|]"
.RB "[\|" \-f2 
.IR filter2 "\|]"
.RB "[\|" \-f3 
.IR filter3 "\|]"
.RB "[\|" \-w
.IR window "\|]" 
.RB "[\|" \-b
.IR block_size "\|]" 
.RB "[\|" \-eb
.IR block_size "\|]" 
.RB "[\|" \-exp "\|]"
.RB "[\|" \-cb "\|]"
.RB "[\|" \-mc
.IR motion_compensated_frame "\|]" 
.RB "[\|" \-srf
.IR subpixel_reference_frame "\|]" 
.RB "[\|" \-r
.IR residual_frame "\|]" 
.I reference_frame current_frame mvfile
.SH DESCRIPTION
.TP
.B \-fp
Full-pixel accuracy.
.TP
.B \-hp
Half-pixel accuracy.
.TP
.B \-qp
Quarter-pixel accuracy.
.TP
.B \-ep
Eighth-pixel accuracy.
.TP
.BI \-f1 " filter1"
String. Filename of filter to use
for going from full-pixel to half-pixel accuracy.
.TP
.BI \-f2 " filter2"
String. Filename of filter to use
for going from half-pixel to quarter-pixel accuracy.
.TP
.BI \-f3 " filter3"
String. Filename of filter to use
for going from quarter-pixel to eighth-pixel accuracy.
.TP
.BI \-w " window"
Integer. Window size for motion estimation. Default is 15 pixels.
.TP
.BI \-b " block_size"
Integer. Block size used in creating regular mesh. Default is 16 pixels.
.TP
.BI \-eb " estimation_block_size"
Integer. Block size used in estimating motion of mesh vertices.
Default is 9 pixels.
.TP
.B \-exp
Use an exponential weighting kernel for block matching. Default is to use
uniform weighting across the block.
.TP
.B \-cb
Constrain motion vectors of mesh vertices at image boundaries to be zero.
Default is to not constrain the motion of these vertices.
.TP
.BI \-mc " motion_compensated_frame"
String. Filename of file to which to write the motion-compensated frame.
.TP
.BI \-srf " subpixel_reference_frame"
String. Filename of file to which to write the reference frame after
having been interpolated to the specified subpixel accuracy.
.TP
.BI \-r " residual_frame"
String. Filename of file to which to write the difference between
the current frame and the motion-compensated frame, the residual image
from the motion-compensation process.
.SH DESCRIPTION
.B mesh_memc
reads two images, a
.I current_frame
and a
.IR reference_frame ,
performing motion estimation using a regular triangle mesh
to estimate motion from
.I reference_frame
to
.IR current_frame .
See
.BR QccVIDMeshMotionEstimationSearch (3)
for details on how this mesh-based motion-estimation procedure is
carried out.
.LP
The regular triangle mesh is created by dividing the reference
frame into square blocks of size
.I block_size
(default is 16) and then splitting each block along its diagonal.
.LP
Motion of mesh vertices is estimated by centering square blocks of size
.I estimation_block_size
(default is 9) about the vertex of interest, and performing
a block-matching search.
The size of the window in which to perform
the block-matching search is
.IR window
(default is 15).
This block-matching search may optionally be weighted by an exponential
kernel which gives greater priority to matching pixels near the
center of the box (i.e., near the mesh vertex itself).
This exponential-kernel search occurs when the
.BR \-exp
option is specified; otherwise, all pixels are weighted equally in the
block-matching search.
.LP
If the
.BR \-cb
option is specified, all mesh vertices that lie on the boundaries of the
reference frame are constrained to have zero motion; i.e., their
motion vectors will be zero.
.LP
.BR mesh_memc
first interpolates
.I reference_frame
to the specified subpixel accuracy as determined by the
.BR \-fp ,
.BR \-hp ,
.BR \-qp ,
or
.BR \-ep 
options. In the case that none of these options are specified,
.BR mesh_memc
defaults to using full-pixel accuracy.
.BR QccVIDMotionEstimationCreateReferenceFrame (3)
is used to perform the subpixel-accuracy interpolation, with
.IR filter1 ,
.IR filter2 ,
and
.IR filter3
provided to the latter routine if specified
.RI ( filter1 ,
.IR filter2 ,
and
.IR filter3
should be files whose format is described with
.BR QccFilterRead (3)).
Next,
.BR QccVIDMeshMotionEstimationSearch (3)
is called to carry out the mesh-based motion-estimation search.
Finally,
.BR QccVIDMotionVectorsWriteFile (3)
writes the resulting motion vectors to
.IR mvfile .
.LP
If the
.BR \-mc
option is specified,
.BR QccVIDMeshMotionEstimationCreateCompensatedFrame (3)
is called to generate the motion-compensated frame using the
motion vectors that resulted from the motion search.
This compensated frame is then written to
.IR motion_compensated_frame .
.LP
If the
.BR \-srf
option is specified,
the interpolated, subpixel-accurate reference frame (as generated by
.BR QccVIDMotionEstimationCreateReferenceFrame (3))
is written to
.IR reference_frame .
.LP
If the
.BR \-r
option is specified,
the residual image between the current frame and the motion-compensated
frame is written to
.IR residual_frame .
This residual is not the true difference image, but rather the absolute
value of the difference image, in order to avoid negative-valued
pixels.
.SH "SEE ALSO"
.BR QccVIDMeshMotionEstimationSearch (3),
.BR QccVIDMeshMotionEstimationCreateCompensatedFrame (3),
.BR QccVIDMotionEstimationCreateReferenceFrame (3),
.BR QccVIDMotionVectorsWriteFile (3),
.BR QccFilterRead (3),
.BR QccRegularMesh (3),
.BR QccPackVID (3),
.BR QccPackIMG (3),
.BR QccPack (3)

Y. Altunbasak, A. M. Tekalp, and G. Bozdagi,
"Two-Dimensional Object-based Coding Using a Content-based Mesh
and Affine Motion Parameterization," in
.IR "Proceedings of the International Conference on Image Processing" ,
Washington, DC, October 1995, vol. 2, pp. 394-397.

M. Eckert, D. Ruiz, J. I. Ronda, and N. Garcia,
"Evaluation of DWT and DCT for Irregular Mesh-based
Motion Compensation in Predictive Video Coding,"  in
.IR "Visual Communications and Image Processing" ,
K. N. Ngan, T. Sikora, and M.-T. Sun, Eds., Proc. SPIE 4067,
June 2000, pp. 447-456.

K. Schroder and R. Mech,
"Combined Description of Shape and Motion in an Object
Based Coding Scheme Using Curved Triangles," in
.IR "Proceedings of the International Conference on Image Processing" ,
Washington, DC, October 1995, vol. 2, pp. 390-393.

Y. Wang, S. Cui, and J. E. Fowler,
"3D Video Coding Using Redundant-Wavelet Multihypothesis and
Motion-Compensated Temporal Filtering," in
.IR "Proceedings of the International Conference on Image Processing" ,
Barcelona, Spain, September 2003, vol. 2, pp. 755-758.

Y. Wang, S. Cui, and J. E. Fowler,
"3D Video Coding with Redundant-Wavelet Multihypothesis,"
.IR "IEEE Transactions on Circuits and Systems for Video Technology" ,
submitted July 2003. Revised April 2004, March 2005.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
