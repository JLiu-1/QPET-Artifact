.TH SPATIALBLOCKENCODE 1 "QCCPACK" ""
.SH NAME
spatialblockencode, spatialblockdecode \- encode/decode 
image sequence using the spatial-block algorithm
.SH SYNOPSIS
.B spatialblockencode 
.RB "[\|" \-fp "\|]"
.RB "[\|" \-hp "\|]"
.RB "[\|" \-qp "\|]"
.RB "[\|" \-ep "\|]"
.RB "[\|" \-f1 
.IR filter1 "\|]"
.RB "[\|" \-f2 
.IR filter2 "\|]"
.RB "[\|" \-f3 
.IR filter3 "\|]"
.RB "[\|" \-w 
.IR wavelet "\|]"
.RB "[\|" \-b
.IR boundary "\|]" 
.RB "[\|" \-nl
.IR num_levels "\|]" 
.RB "[\|" \-mv
.IR mvfile "\|]" 
.RB "[\|" \-rmv "\|]"
.RB "[\|" \-bs
.IR blocksize "\|]" 
.RB "[\|" \-sf
.IR startframe "\|]" 
.RB "[\|" \-ef
.IR endframe "\|]" 
.RB "[\|" \-q "\|]"
.I rate sequence bitstream

.B spatialblockdecode 
.RB "[\|" \-fp "\|]"
.RB "[\|" \-hp "\|]"
.RB "[\|" \-qp "\|]"
.RB "[\|" \-ep "\|]"
.RB "[\|" \-f1 
.IR filter1 "\|]"
.RB "[\|" \-f2 
.IR filter2 "\|]"
.RB "[\|" \-f3 
.IR filter3 "\|]"
.RB "[\|" \-w 
.IR wavelet "\|]" 
.RB "[\|" \-b
.IR boundary "\|]" 
.RB "[\|" \-mv
.IR mvfile "\|]" 
.RB "[\|" \-q "\|]"
.I bitstream sequence
.SH DESCRIPTION
.TP
.B \-fp
Full-pixel accuracy.
.TP
.B \-hp
Half-pixel accuracy.
.TP
.B \-qp
Quarter-pixel accuracy.
.TP
.B \-ep
Eighth-pixel accuracy.
.TP
.BI \-f1 " filter1"
String. Filename of filter to use
for going from full-pixel to half-pixel accuracy.
.TP
.BI \-f2 " filter2"
String. Filename of filter to use
for going from half-pixel to quarter-pixel accuracy.
.TP
.BI \-f3 " filter3"
String. Filename of filter to use
for going from quarter-pixel to eighth-pixel accuracy.
.TP
.BI \-w " wavelet"
String. Name of the wavelet file
.RB ( FBK
or 
.B LFT
for mat); default = "CohenDaubechiesFeauveau.9-7.lft".
.TP
.BI \-b " boundary"
String. Type of boundary extension; default = "symmetric".
.TP
.BI \-nl " num_levels"
Integer. Number of levels of wavelet-transform
decomposition; default value is 3.
.TP
.BI \-mv " mvfile"
String. Name of file to which to read or write motion vectors. Filename
should contain a
.BR printf (3)-style
numerical descriptor which will be filled in with the current frame number.
.TP
.B \-rmw
Read motion vectors from specified file.
.TP
.BI \-bs " blocksize"
Integer. Block size to use in full-search block matching;
default value is 8.
.TP
.BI \-sf " startframe"
Integer. Frame at which to start encoding. Default is first available frame.
.TP
.BI \-ef " endframe"
Integer. Frame at which to end encoding. Default is last available frame.
.TP
.B \-q
Be quiet---do not print any frame statistics to stdout;
default is verbose output.
.SH DESCRIPTION
.B spatialblockencode
encodes an image sequence, 
.IR sequence , 
using the spatial-block algorithm, a generic approach consisting
of spatial-domain motion estimation and compensation followed by
embedded wavelet-based coding of the residual.
.LP
Option
.B \-w
specifies the wavelet, while
option
.B \-b
specifies the boundary extension
for DWT used by the algorithm.
.LP
The desired bitrate of the output
.I bitstream
is specified by
.IR rate ,
which is expressed in bits per pixel of the original image sequence.
.LP
.B spatialblockdecode
performs the corresponding decoding using the spatial-block algorithm, decoding
the
.I bitstream
made by
.B spatialblockencode
and producing
a reconstructed image sequence,
.IR sequence .
For sane results, 
.IR wavelet 
and
.IR boundary
should be the same as they were for
.BR spatialblockencode .
.LP
For both encoding and decoding,
.I sequence
should indicate a collection of grayscale images of the same size stored
as separate, numbered files; the
filename indicated by
.I sequence
must contain one 
.BR printf (3)-style
numerical descriptor which will then be filled in the current
frame number (e.g., football.%03d.pgm will become
football.000.pgm, football.001.pgm, etc.; see
.BR QccPackIMG (3)).
.LP
Both
.B spatialblockencode
and
.B spatialblockdecode
normally print to stdout a small amount of information
after each frame is coded/decoded.
If the 
.B \-q
(quiet) option is given, all printed output is suppressed.
.LP
.B spatialblockencode
and
.B spatialblockdecode
call
.BR QccVIDSpatialBlockEncode (3) 
and 
.BR QccVIDSpatialBlockDecode (3), 
respectively, to perform spatial-block encoding and decoding.
Refer to the man pages of these functions for more information.
.LP
If the
.B \-mv
option is specified to
.BR spatialblockencode ,
motion vectors are written to
.IR mvfile
via
.BR QccVIDMotionVectorsWriteFile (3),
unless
.B \-rmw
is also specified, in which case,
the motion-estimation process of
.B spatialblockencode
is circumvented, and the motion vectors
are read from
.IR mvfile
via
.BR QccVIDMotionVectorsReadFile (3).
For
.BR spatialblockdecode ,
if
.I mvfile
is specified, motion vectors are read from the file
rather than from the encoded bitstream
via
.BR QccVIDMotionVectorsReadFile (3).
.I mvfile
should have a
.BR printf (3)-style
numerical descriptor which will be filled in with
the current frame number before reading or writing
motion vectors.
.SH "SEE ALSO"
.BR QccVIDSpatialBlockEncode (3),
.BR QccVIDSpatialBlockDecode (3),
.BR QccVIDMotionVectorsReadFile (3),
.BR QccVIDMotionVectorsWriteFile (3),
.BR QccPackVID (3),
.BR QccPackSPIHT (3),
.BR QccPackWAV (3),
.BR QccPackIMG (3),
.BR QccPack (3)

S. Cui, Y. Wang, and J. E. Fowler,
"Motion Compensation Via Redundant-Wavelet Multihypothesis,"
.IR "IEEE Transactions on Image Processing" ,
submitted March 2004. Revised February 2005.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
