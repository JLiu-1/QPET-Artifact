.TH RSENCODE 1 "QCCPACK" ""
.SH NAME
rsencode \- Reed-Solomon coding
.SH SYNOPSIS
.B rsencode
.RB "[\|" \-k
.IR  k "\|]"
.RB "[\|" \-n
.IR  n "\|]"
.I infile
.I outfile
.SH OPTIONS
.TP
.BI \-k " k"
Integer. The number of message symbols per coded block.
Default = 10.
.TP
.BI \-n " n"
Integer. The total number of symbols per coded block.
Default = 15.
.SH DESCRIPTION
.LP
.B rsencode
implements Reed-Solomon forward-error-correction (FEC) coding
of a file.
.I infile
is the filename of the file to be FEC protected;
.I outfile
is the resulting FEC-protected file.
It is assumed that symbols stored in
.I infile
are single-character bytes; i.e., it is a text file.
.LP
Reed-Solomon coding is a
.RI ( n ", " k )
FEC code; that is,
.IR n " - " k
FEC symbols are concatenated to
.I k
message symbols
to produce an
.IR n -symbol
block. The 
.IR n " - " k
FEC symbols are redundant information that aids in the recovery
of the
.I k
message symbols should some of these symbols be lost or corrupted
during transmission of the coded file.
In particular, Reed-Solomon coding has the property that if up to
.IR n " - " k
symbols out of the 
.I n
symbols in the coded block are lost, the original
.I k
message symbols can be recovered exactly.
.LP
.B rsencode
reads
.I k
symbols (i.e., single-byte characters) from
.IR infile ,
calculates the corresponding
.IR n " - " k
FEC symbols for these
.I k
message symbols, and then
writes the corresponding 
.RI length- n
coded block to
.IR outfile .
When the end of file of
.I infile
is encountered, zeros are added as needed to fill out the last block
to 
.I k
symbols before calculating the FEC symbols.
Thus the length of
.I outfile
is
.RI ceil( N / k )* n ,
where 
.I N
is the length of
.IR infile .
.SH NOTES
Reed-Solomon codes were introduced in 1960 by Reed and Solomon. The
implementation found in QccPack follows that by Rizzo.
.SH "SEE ALSO"
.BR QccECCReedSolomonEncode (3),
.BR QccECCReedSolomonDecode (3),
.BR QccPackECC (3),
.BR QccPack (3)

I. S. Reed and G. Solomon,
"Polynomial Codes Over Certain Finite Fields,"
.IR "J. Soc. Ind. Appl. Math." ,
vol. 8, pp. 300-304, 1960. 

L. Rizzo, "Effective Erasure Codes for Reliable Computer Communication
Protocols,"
.IR "ACM Computer Communication Review" ,
vol. 27, no. 2, pp. 24-36, April 1997.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

