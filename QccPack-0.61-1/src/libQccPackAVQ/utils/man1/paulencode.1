.TH PAULENCODE 1 "QCCPACK" ""
.SH NAME
paulencode \- encode using Paul's 1982 AVQ algorithm
.SH SYNOPSIS
.B paulencode
.RB "[\|" \-d
.IR  distortion\_threshold "\|]"
.RB "[\|" \-fc
.IR final\_codebook "\|]"
.I datfile
.I codebook
.I codebook\_coder
.I channelfile
.I sideinfofile
.SH OPTIONS
.TP
.BI \-d " distortion\_threshold"
Float. Distortion-threshold parameter. Default value = 100.0.
.TP
.BI \-fc " final\_codebook"
String. Output the final state of the codebook after encoding to
.IR final\_codebook .
.SH DESCRIPTION
.LP
.B paulencode
implements Paul's 1982 AVQ algorithm
for adaptive vector quantization (AVQ).
The vectors of
.I datfile
(DAT format)
are encoded using Paul's algorithm, with
.I codebook
(CBK format)
being the initial codebook.
.B paulencode
outputs a channel of VQ indices,
.I channelfile
(CHN format), and side information,
.I sideinfofile
(SID format).
.I codebook\_coder 
gives the scalar quantizer used to produce the side information (see below).
Note:
.B paulencode
implements the move-to-front variant of the Paul algorithm as described
by Goodman et al.
.LP
.B pauldecode
is used for the corresponding decoding of 
.I channelfile 
and
.IR sideinfofile ;
.B avqrate
calculates the bit rate for the Paul algorithm as represented by
this channel and the side information.
See
.BR pauldecode (1)
and
.BR avqrate (1)
for more details.
.LP
If option
.B \-fc
is specified, 
.B paulencode
outputs the final state of the codebook, taking into account all codebook
updates performed during coding, to
.IR final\_codebook .
.SH "SIDE INFORMATION"
.LP
The side information output by
.B paulencode
consists of a series of flags
indicating whether or not the codebook is updated at a given time, as well as
the vectors added to the codebook during a codebook update.
The side-information file,
.IR sideinfofile ,
consists of a sequence of symbols of the following form:
.nf

.I "    <symbol type>" <symbol value>

.fi
where
.I <symbol type>
is 1 for a flag, and 3 for an update vector.
If 
.I <symbol type>
= 1, then the current symbol is a flag, and, in this case,
.I <symbol value>
can be either 0 or 1. If
.I <symbol value>
= 1, then the symbol indicates that a codebook update is to be performed,
and the next symbol will be the new codeword.
.I <symbol value>
= 0 for no update.
If
.I <symbol type>
= 3, then the current symbol is a vector.
In this case,
.I <symbol value>
= 
.IR "v[1] v[2] " \|.\|.\|. " v[dim]" .
The scalar quantizer 
.I codebook\_coder 
(SQ format) is used to
quantize each component of the vector that updates the
codebook.
Thus, each
.I v[i]
is an index output from this scalar quantizer.
Note:
.I dim
is the vector dimension specified in the header of 
.I sideinfofile
(see
.BR QccPack (1)).
Note: in all instances,
.I <symbol value>
and 
.I <symbol type>
are stored in ASCII characters.
The value of 
.I N
(see
.BR QccPack (1))
specified in the header of 
.I sideinfofile
gives the number of symbols with
.I <symbol type>
= 1, i.e. the number of flags stored in
.IR sideinfofile .
.SH "SEE ALSO"
.BR pauldecode (1),
.BR avqrate (1),
.BR QccPackAVQ (3),
.BR QccPack (3)

D. B. Paul, "A 500-800 bps Adaptive Vector Quantization Vocoder Using a
Perceptually Motivated Distance Measure," in 
.IR "Conference Record, IEEE Globecom" ,
pp. 1079-1082, 1982.

R. M. Goodman, B. Gupta, and M. Sayano,
"Neural Network Implementation of  Adaptive Vector Quantization for Image
Compression,"
tech. rep., Department of Electrical Engineering,
California Institute of Technology, Pasadena, CA, 1991.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
