.TH IMGRDWT 1 "QCCPACK" ""
.SH NAME
imgrdwt, imgirdwt \- RDWT an image, and corresponding inverse
transform
.SH SYNOPSIS
.B imgrdwt
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-nl
.IR  levels "\|]"
.I imgfile
.I icpfiles...
.LP
.B imgirdwt
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.I icpfiles...
.I imgfile
.SH OPTIONS
.TP
.BI \-w " wavelet"
String. 
Name of the wavelet file
.RB ( FBK
or
.B LFT
format); default = "CohenDaubechiesFeauveau.9-7.lft"
.TP
.BI \-b " boundary"
String. Type of boundary extension; default = "symmetric".
.TP 
.BI \-nl " levels"
Integer. Number of levels of dyadic decomposition; default value is determined
from number of output
.IR icpfiles
.SH DESCRIPTION
.LP
.B imgrdwt
implements a 2D separable redundant discrete wavelet transform (RDWT)
of grayscale image
.IR imgfile .
This wavelet decomposition is accomplished by applying a 1D
RDWT along every row and then along every column.
The output of this process is
a low-resolution approximation (the baseband image)
to the original image, as well as highpass subbands
in the horizontal, vertical, and diagonal directions.
Each of these subbands has the same size as the original image.
If
.I levels
is greater than 1, the baseband subband is recursively decomposed using this
same process.
.LP
.I wavelet
is the name of a file containing either the
filter bank 
.RB ( FBK 
format) or lifting scheme
.RB ( LFT
format) to use in performing the DWT.
The name of the filter-bank/lifting-scheme file is given by
.IR wavelet ;
this file must be found in the path given by the
environment variable
.BR QCCPACK_WAVELET_PATH .
The appropriate transform implementation
(filter bank, lifting) is used based upon the type
.RB ( FBK , " LFT" )
of the found file.
If the user does not specify a wavelet,
the default wavelet is a lifting implementation of the
Cohen-Feauveau-Daubechies 9/7 spline with less dissimilar lengths, a
biorthogonal wavelet popular wavelet for image-processing
applications (see Cohen 
.IR "et al" .,
Antonini 
.IR "et al" .).
.LP
.I boundary
gives the method for handling the image boundaries.  Possible values
for boundary are described in the page for
.BR QccWAVWavelet (3).
Not all boundary methods are permitted for
all wavelets; check the comments at the start of
.B FBK
or
.B LFT
files for possible values for particular wavelets.
The default boundary-extension method is "symmetric".
.LP
.IR levels
gives the number of transform decomposition levels.
Since at every scale, or level, of RDWT decomposition, four subbands are
produced, the total number of subbands produced in a transform with
.IR levels
levels of decomposition is
.RI "3 * " levels " + 1."
.B imgdwt
saves the resulting subbands to the 
.BR ICP -format
files
.IR icpfiles .
If
.IR levels
is specified,
.B imgrdwt
ensures that the number of output
.IR icpfiles
is less than or equal
.RI "3 * " levels " + 1."
On the other hand, if
.IR levels
is not specified,
.B imgrdwt
looks at how many
.I icpfiles
are given on the command line to determine the number of
levels 
of transform to take.
In this case,
.B imgrdwt
checks to see that the number of
.I icpfiles
correctly specifies a number of
.IR levels .
For example, if one gives 10
.I icpfiles
on the command line, then
.B imgrdwt
performs a 3-level RDWT,
since
.IR "levels" " =  (10 - 1) / 3 = 3."
On the other hand, if ones gives, say, 9 or 11
.I icpfiles
on the command line,
.B imgrdwt
exits in error, since neither 8 nor 10 are divisble by 3 and therefore
do not specify a possible number of transform scales.
.LP
.B imgirdwt
implements the corresponding inverse RDWT.
The number of levels of inverse RDWT to be performed is extracted
from the the number of input
.I icpfiles
specified on the command line
in a manner identical to that described above for
.BR imgrdwt .
.LP
.B imgrdwt
and
.B imgrdwt
are implemented via calls
to
.BR QccWAVWaveletRedundantDWT2D (3)
and
.BR QccWAVWaveletRedundantDWT2D (3),
respectively.
See the corresponding documentation for those functions
for details on the RDWT and its relation to the usual
critically sampled DWT as implemented by
.BR imgdwt (1).
.SH "SEE ALSO"
.BR QccWAVWaveletRedundantDWT2D (3),
.BR QccWAVWaveletInverseRedundantDWT2D (3),
.BR imgdwt (1),
.BR imgidwt (1),
.BR QccPackWAV (3),
.BR QccPackIMG (3),
.BR QccPack (3)

A. Cohen, I. Daubechies, J. C. Feauveau, "Biorthogonal Bases of
Compactly Supported Wavelets," 
.IR "Communications on Pure and Applied Mathematics" ,
vol. 45, no. 5, pp. 485-560, May 1992.

M. Antonini, M. Barlaud, P. Mathieu, I. Daubechies, "Image Coding Using
Wavelet Transform," 
.IR "IEEE Transactions on Image Processing" ,
vol. 1, no. 2, pp. 205-220, April 1992.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
