.TH TARPENCODE 1 "QCCPACK" ""
.SH NAME
tarpencode, tarpdecode \-
encode/decode an image using the tarp algorithm
.SH SYNOPSIS
.sp
.B tarpencode
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-nl
.IR  levels "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-vo "\|]"
.RB "[\|" \-a
.IR  alpha "\|]"
.I rate
.I imgfile
.I bitstream
.LP
.B tarpdecode
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-r
.IR  rate "\|]"
.I bitstream
.I imgfile
.SH OPTIONS
.TP
.BI \-w " wavelet"
String. 
Name of the wavelet file
.RB ( FBK
or
.B LFT
format); default = "CohenDaubechiesFeauveau.9-7.lft"
.TP
.BI \-b " boundary"
String. Type of boundary extension; default = "symmetric".
.TP 
.BI \-nl " levels"
Integer. Number of levels of dyadic decomposition; default value is 5 levels.
.TP
.BI \-m " mask"
String. Name of file containing the transparency mask for
shape-adaptive coding. Default is to not use a mask.
.TP
.BI \-r " rate"
Float. Rate at which to stop decoding. Default is to decode until
end of input bitstream is reached.
.TP
.B \-vo
Print only the value of the rate to stdout (terse output);
default is verbose output.
.TP
.BI \-a " alpha"
Floating point. 
Value of the learning-rate of the density-estimation process of the
tarp algorithm. Default value is 0.6.
.SH DESCRIPTION
.LP
.B tarpencode
codes an image,
.IR imgfile ,
using the tarp
algorithm by Simard
.IR "et al" .
The tarp algorithm involves a 2D DWT followed by 
a progressive "bitplane" coding of the wavelet coefficients using a
Parzen-window technique to estimate probability of significance and
nonadaptive arithmetic coding to code significance-map and
refinement information. See 
.BR QccWAVTarpEncode (3)
for more detail on the algorithm.
.LP
The transform is either the usual discrete
wavelet transform (DWT) or a shape-adaptive
DWT (SA-DWT); see
.BR imgdwt (1)
for complete details.
Option
.B \-w
specifies the wavelet, 
option
.B \-b
specifies the boundary extension, and option
The
.B \-m
option gives the image file to be used as a transparency mask
for the SA-DWT.
.I mask
must be a grayscale image
in which black in this image indicates transparency, white
indicates full opacity, and gray tones are degrees of
translucence
(see
.BR QccAlpha (3)).
If the
.B \-m
option is not given, the usual DWT is used.
.LP
The desired bitrate of the output
.I bitstream
is specified by
.IR rate ,
which is expressed in bits per pixel of the original image.
.B tarpencode
normally prints to stdout a small amount of information
concerning this target bitrate and the actual bitrate achieved.
Usually these rates are identical, but may differ slightly.
If the 
.B \-vo
(value-only) option is given, all printed output is suppressed except for
the actual bitrate.
.LP
.B tarpdecode
performs the corresponding decoding using the tarp algorithm, decoding
the
.I bitstream
made by
.B tarpencode
and producing
a reconstructed image,
.IR imgfile .
For sane results, 
.IR wavelet ,
and
.IR boundary
should be the same as they were for
.BR tarpencode ,
and
.I mask
should be the same if an SA-DWT was used as the transform.
If a decoding rate is specified with the
.B \-r
option, then
.B tarpdecode
stops decoding when
.I rate
bits per pixel from the input bitstream
have been decoded. Otherwise, decoding stops when the
end of the input bitstream is reached.
.LP
.BR tarpencode
and
.BR tarpdecode
call
.BR QccWAVTarpEncode (3)
and
.BR QccWAVTarpDecode (3),
respectively, to perform tarp encoding and decoding.
Refer to the man pages for these functions for more information
on the details of the QccPack implementation of the tarp algorithm.
.SH "SEE ALSO"
.BR QccWAVTarpEncode (3),
.BR QccWAVTarpDecode (3),
.BR imgdwt (1),
.BR QccWAVSubbandPyramid (3),
.BR QccPackWAV (3),
.BR QccPackIMG (3),
.BR QccPack (3)

P. Simard, D. Steinkraus, and H. Malvar, "On-Line Adaptation in Image Coding
with a 2-D Tarp Filter", in
.IR "Proceedings of the IEEE Data Compression Conference" ,
J. A. Storer and M. Cohn, Eds.,  
Snowbird, UT, April 2002, pp. 422-431.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
