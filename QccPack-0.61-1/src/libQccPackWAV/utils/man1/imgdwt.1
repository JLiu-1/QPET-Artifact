.TH IMGDWT 1 "QCCPACK" ""
.SH NAME
imgdwt, imgidwt \- DWT and SA-DWT of an image, and corresponding inverse
transform
.SH SYNOPSIS
.B imgdwt
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-pw
.IR  pcpfile "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-nl
.IR  levels "\|]"
.I imgfile
.I subband_pyramid
.LP
.B imgidwt
.RB "[\|" \-w
.IR  wavelet "\|]"
.RB "[\|" \-b
.IR  boundary "\|]"
.RB "[\|" \-pw
.IR  pcpfile "\|]"
.RB "[\|" \-m
.IR  mask "\|]"
.RB "[\|" \-l
.IR  last_subband "\|]"
.I subband_pyramid
.I imgfile
.SH OPTIONS
.TP
.BI \-w " wavelet"
String. 
Name of the wavelet file
.RB ( FBK
or
.B LFT
format); default = "CohenDaubechiesFeauveau.9-7.lft"
.TP
.BI \-b " boundary"
String. Type of boundary extension; default = "symmetric".
.TP
.BI \-pw " pcpfile"
String. Name of file containing perceptual weights.
.TP
.BI \-m " mask"
String. Name of file containing the transparency mask for
shape-adaptive transform.
.TP 
.BI \-nl " levels"
Integer. Number of levels of dyadic decomposition; default value is 1 level.
.SH DESCRIPTION
.LP
.B imgdwt
implements a 2D separable discrete wavelet transform (DWT)
of grayscale image
.IR imgfile .
This wavelet decomposition is accomplished by applying a 1D
DWT, first along every row and then along every column.
The output of this process is
a low-resolution approximation (the baseband image)
to the original image, as well as highpass subbands
in the horizontal, vertical, and diagonal directions.
The baseband and the highpass subbands are each
one quarter the size of the original image.
If
.I levels
is greater than 1, then this process is repeated on the baseband;
i.e., the baseband subband is recursively decomposed.
The resulting subbands of these decompositions are recursively nested in the
upper-left of
.IR subband_pyramid 
in a so-called dyadic, or octave, subband-pyramid structure.
.I subband_pyramid
has the same number of rows and columns as
.IR imgfile .
.LP
.I wavelet
is the name of a file containing either the
filter bank 
.RB ( FBK 
format) or lifting scheme
.RB ( LFT
format) to use in performing the DWT.
The name of the filter-bank/lifting-scheme file is given by
.IR wavelet ;
this file must be found in the path given by the
environment variable
.BR QCCPACK_WAVELET_PATH .
The appropriate transform implementation
(filter bank, lifting) is used based upon the type
.RB ( FBK , " LFT" )
of the found file.
If the user does not specify a wavelet,
the default wavelet is a lifting implementation of the
Cohen-Feauveau-Daubechies 9/7 spline with less dissimilar lengths, a
biorthogonal wavelet popular wavelet for image-processing
applications (see Cohen 
.IR "et al" .,
Antonini 
.IR "et al" .).
.LP
.I boundary
gives the method for handling the image boundaries.  Possible values
for boundary are described in the page for
.BR QccWAVWavelet (3).
Not all boundary methods are permitted for
all wavelets; check the comments at the start of
.B FBK
or
.B LFT
files for possible values for particular wavelets.
The default boundary-extension method is "symmetric".
.LP
If the
.B \-pw
option is specified, then each wavelet coefficient is
perceptually weighted after the DWT is performed.
Perceptual weights are given by the file
.I pcpfile
.RB ( PCP
format);
this file must be found in the path given by the
environment variable
.BR QCCPACK_WAVELET_PATH .
The perceptual weights in
.I pcpfile
are the
reciprocals of the just-noticeable distortions (JND) for the subbands.
That is, perceptual weighting is accomplished by multiplying
each wavelet coefficient by the appropriate weight given in
.I pcpfile 
(see 
.BR QccWAVPerceptualWeights (3)
and Hontsch 
.IR "et al" .).
In the absense of the
.B \-pw
option, no perceptual weighting is used (the default).
.LP
If the
.B \-m
option is specified,
.B imgdwt
performs a shape-adaptive DWT (SA-DWT), in which case,
.I mask
gives the transparency mask indicating which pixels are to be transformed.
.I mask
must be a grayscale image
in which black in this image indicates transparency, white
indicates full opacity, and gray tones are degrees of
translucence
(see
.BR QccAlpha (3)).
If the
.B \-m
option is not given, the usual DWT is used.
See 
.BR QccWAVSubbandPyramidShapeAdaptiveDWT2D (3)
and Li and Li for more 
information on the SA-DWT.
Note that
.B imgdist (1)
can perform "shape-adaptive" distortion
calculations, i.e., distortion only over
non-transparent regions, as needed
for measuring performance of SA-DWT based operations.
.LP
Note:
.B sbpsplit
may be used to split a subband pyramid into separate subband files.
.LP
.B imgidwt
implements the corresponding inverse DWT or inverse SA-DWT.
Perceptual weighting (if any) is removed before the inverse transform is
performed. The transparency
.IR mask ,
if used,
should be the same as used by
.BR imgdwt .
The number of levels of inverse DWT to be performed is extracted
from the header of
.IR subband_pyramid .
If the 
.B \-l
option is specified,
.I last_subband
gives the last subband to include in the inverse DWT.  That is,
.B imgidwt
will zero out the subbands numbered greater than or equal to
.I last_subband
+ 1
in the subband pyramid before taking the inverse transform.
The subband zeroing is performed via a call to
.BR QccWAVSubbandPyramidZeroSubband (3).
For example, to see what retaining only the baseband coefficients
looks like, use
.I last_subband
= 0.
.SH "SEE ALSO"
.BR sbpsplit (1),
.BR sbpassemble (1),
.BR QccWAVSubbandPyramidDWT (3),
.BR QccWAVSubbandPyramidInverseDWT (3),
.BR QccWAVSubbandPyramidShapeAdaptiveDWT (3),
.BR QccWAVSubbandPyramidInverseShapeAdaptiveDWT (3),
.BR QccWAVSubbandPyramidZeroSubband (3),
.BR QccWAVPerceptualWeights (3),
.BR QccWAVSubbandPyramidZeroSubband (3),
.BR QccWAVSubbandPyramid (3),
.BR QccPackWAV (3),
.BR QccPackIMG (3),
.BR QccPack (3)

A. Cohen, I. Daubechies, J. C. Feauveau, "Biorthogonal Bases of
Compactly Supported Wavelets," 
.IR "Communications on Pure and Applied Mathematics" ,
vol. 45, no. 5, pp. 485-560, May 1992.

M. Antonini, M. Barlaud, P. Mathieu, I. Daubechies, "Image Coding Using
Wavelet Transform," 
.IR "IEEE Transactions on Image Processing" ,
vol. 1, no. 2, pp. 205-220, April 1992.

I. Hontsch, L. J. Karam, and R. J. Safranek,
"A Perceptually Tuned Embedded Zerotree Image Coder,"
.IR "Proceedings of the IEEE International Conference on Image Processing" ,
vol. 1, pp. 41-44, October 1997.

S. Li and W. Li, "Shape-Adaptive Discrete Wavelet Transforms for
Arbitrarily Shaped Visual Object Coding,"
.IR "IEEE Transactions on Circuits and Systems for Video Coding" ,
vol. 10, pp. 725-743, August 2000.

.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them and/or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
