.TH QCCWAVWAVELETDYADICDWT3D 3 "QCCPACK" ""
.SH NAME
QccWAVWaveletDyadicDWT3D, QccWAVWaveletInverseDyadicDWT3D \- 
separable dyadic 3D discrete wavelet transform and
inverse transform for a 3D signal
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccWAVWaveletDyadicDWT3D(QccVolume " volume ", int " num_frames ", int " num_rows ", int " num_cols ", int " origin_frame ", int " origin_row ", int " origin_col ", int " subsample_pattern_frame ", int " subsample_pattern_row ", int " subsample_pattern_col ", int " num_scales ", const QccWAVWavelet *" wavelet );
.sp
.BI "int QccWAVWaveletInverseDyadicDWT3D(QccVolume " volume ", int " num_frames ", int " num_rows ", int " num_cols ", int " origin_frame ", int " origin_row ", int " origin_col ", int " subsample_pattern_frame ", int " subsample_pattern_row ", int " subsample_pattern_col ", int " num_scales ", const QccWAVWavelet *" wavelet );
.SH DESCRIPTION
.B QccWAVWaveletDyadicDWT3D()
performs a separable dyadic 3D
discrete wavelet transform (DWT) of a three-dimensional signal,
.IR volume ,
which is represented as a volume of
.IR num_frames
frames,
.IR num_rows 
rows, and
.I num_cols
columns.
.IR origin_frame ,
.IR origin_row ,
and
.I origin_col
indicates the frame, row, and column indices, respectively, of the upper
corner of the image cube.
Usually, one assumes that the upper corner of the image cube is
indexed as (0, 0, 0) - in this case, 
.IR origin_frame ,
.IR origin_row ,
and
.I origin_col
would all be zero.
.I num_scales
gives the number of scales, or levels, of the decomposition.
.BR QccWAVWaveletDyadicDWT3D()
implements a dyadic, or octave, decomposition of
.IR volume ;
that is, the low-low-low subband (baseband)
is recursively decomposed into one lowpass band and
seven highpass bands for each level of decomposition, each of which being
one eighth the size of the baseband that was decomposed.
.BR QccWAVWaveletDyadicDWT3D()
calls
.BR QccWAVWaveletAnalysis3D (3)
for each level of decomposition, using the baseband
subband for the current level of decomposition as input.
As a result, the transform recursively decomposes the upper corner of
the input volume.
.LP
.B QccWAVWaveletInverseDyadicDWT3D()
performs the corresponding separable dyadic 3D inverse DWT of
.IR volume
which is assumed to have been produced
by
.BR QccWAVWaveletDyadicDWT3D() .
.I num_scales
gives the number of levels of decomposition that exist in
.IR volume .
.B QccWAVWaveletInverseDyadicDWT3D()
calls
.BR QccWAVWaveletSynthesis3D (3)
for each level of synthesis.
.LP
.IR subsample_pattern_frame ,
.IR subsample_pattern_row ,
and
.I subsample_pattern_col
indicate the even- or odd-phase subsampling to be used at each level
of frame, row, and column decomposition.
In most applications, even subsampling at all
levels is desired, in which case 
.IR subsample_pattern_frame ,
.IR subsample_pattern_row ,
and
.I subsample_pattern_col
should all be set to zero.
In more general settings, when some mixture of even- and odd-phase subsampling
is desired, 
.IR subsample_pattern_frame ,
.IR subsample_pattern_row ,
and
.I subsample_pattern_col
can be integers between 0 and
.IR "(2 ^ num_levels) - 1" .
In these integers, the 
.IR j th
bit (where
.I j
= 1 is the least-significant bit) indicates whether the
.IR j th
level of decomposition employs
even or odd subsampling (0 = even, 1 = odd).
For example, if
.I subsample_pattern_row
is 5, then the first and third row decompositions use odd-phase
subsampling, while all others use even subsampling.
.LP
Use
.BR QccWAVSubbandPyramid3DDWT (3)
and
.BR QccWAVSubbandPyramid3DInverseDWT (3)
to perform a separable dyadic 3D DWT or inverse DWT on a
.B QccWAVSubbandPyramid3D
data structure (which is the recommended way to do it, since the
.B QccWAVSubbandPyramid3D
structure stores the number of levels of decomposition along with
the transform coefficients).
.SH "RETURN VALUES"
These routines
return 0 on success and 1 on error.
.SH "SEE ALSO"
.BR QccWAVWaveletAnalysis3D (3),
.BR QccWAVWaveletSynthesis3D (3),
.BR QccWAVSubbandPyramid3DDWT (3),
.BR QccWAVSubbandPyramid3DInverseDWT (3),
.BR QccWAVWaveletPacketDWT3D (3),
.BR QccWAVWaveletInversePacketDWT3D (3),
.BR QccWAVWavelet (3),
.BR QccPackWAV (3),
.BR QccPack (3)
.LP
B.-J. Kim, Z. Xiong, and W. A. Pearlman,
"Low Bit-Rate Scalable Video Coding with 3-D Set Partitioning
in Hierarchical Trees (3-D SPIHT),"
.IR "IEEE Transactions on Circuits and Systems for Video Technology" ,
vol. 10, no. 8, pp. 1374-1387, December 2000.
.LP
M. Antonini, M. Barlaud, P. Mathieu, and I. Daubechies,
"Image Coding Using Wavelet Transform,"
.IR "IEEE Transactions on Image Processing" ,
vol. 1, pp. 205-220, April 1992.
.LP
I. Daubechies and W. Sweldens,
"Factoring Wavelet Transforms Into Lifting Steps,"
.IR "J. Fourier Anal. Appl." ,
vol. 4, no. 3, pp. 245-267, 1998.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



