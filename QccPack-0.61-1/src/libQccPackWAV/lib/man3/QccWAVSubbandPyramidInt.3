.TH QCCWAVSUBBANDPYRAMIDINT 3 "QCCPACK" ""
.SH NAME
QccWAVSubbandPyramidInt \- data structure
for an integer-valued two-dimensional dyadic subband decomposition of an image
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccWAVSubbandPyramidIntInitialize(QccWAVSubbandPyramidInt *" subband_pyramid );
.br
.BI "int QccWAVSubbandPyramidIntAlloc(QccWAVSubbandPyramidInt *" subband_pyramid );
.br
.BI "void QccWAVSubbandPyramidIntFree(QccWAVSubbandPyramidInt *" subband_pyramid );
.br
.BI "int QccWAVSubbandPyramidIntNumLevelsToNumSubbands(int " num_levels );
.br
.BI "int QccWAVSubbandPyramidIntNumSubbandsToNumLevels(int " num_subbands );
.br
.BI "int QccWAVSubbandPyramidIntCalcLevelFromSubband(int " subband ", int " num_levels );
.br
.BI "int QccWAVSubbandPyramidIntSubbandSize(const QccWAVSubbandPyramidInt *" subband_pyramid ", int " subband ", int *" subband_num_rows ", int *" subband_num_cols );
.br
.BI "int QccWAVSubbandPyramidIntSubbandOffsets(const QccWAVSubbandPyramidInt *" subband_pyramid ", int " subband ", int *" row_offset ", int *" col_offset );
.br
.BI "void QccWAVSubbandPyramidIntSubbandToQccString(int " subband ", int " num_levels ", QccString " qccstring );
.br
.BI "int QccWAVSubbandPyramidIntPrint(const QccWAVSubbandPyramidInt *" subband_pyramid );
.SH DESCRIPTION
QccPack provides data structure
.B QccWAVSubbandPyramidInt
for representing integer-valued two-dimensional subband decompositions of
images.
This subband-pyramid structure can be read from and written to 
.BR SBPI -format
files, or a
.B QccWAVSubbandPyramidInt
structure can be used without file input or output.
.LP
The main component of a
.B QccWAVSubbandPyramidInt
structure is a matrix; this will be an
array of wavelet coefficients and will usually be arranged in
"dyadic" or "octave" decompositions (subbands) of several levels.
These dyadic subbands are nested in the upper-left corner
of the matrix.  The size of the subbands
decreases by a factor of two with each increase in level of
decomposition;  the frequency content of the subbands decreases
with increasing subband level.
.LP
Below is a diagram illustrating the composition of the subband-pyramid
matrix.  Here "B" indicates the baseband subband, while "H", "V", and "D"
indicate, respectively, vertical-, horizontal-, and diagonal-coefficient
subbands.  The level, or scale, of the subband
is the number trailing the letter; e.g., "H2" indicates
the horizontal subband on the second level of decomposition. The diagram
below shows a two-level (two-scale) decomposition.
.RS
.nf

    ------------------------------
    |      |      |              |
    |  B2  |  V2  |              |
    |      |      |              |
    ---------------      V1      |
    |      |      |              |
    |  H2  |  D2  |              |
    |      |      |              |
    ------------------------------
    |             |              |
    |             |              |
    |             |              |
    |     H1      |      D1      |
    |             |              |
    |             |              |
    |             |              |
    ------------------------------
.fi
.RE
.LP
Often, a particular subband in the subband pyramid will be addressed with an
integer subband number.  The subband number ranges from 0 (the baseband) to
.I L
* 3, where
.I L
is the number of levels of decomposition in the subband pyramid (the
.I num_levels
field in the data structure described below).
The order of the subband number is baseband, then horizontal, vertical, and
diagonal subbands in order
at the highest level, followed by the horizontal, vertical,
and diagonal subbands at the next highest level, etc.  For example, for the
two-level subband pyramid illustrated above, the following diagram shows
the corresponding subband numbers.
.RS
.nf

    ------------------------------
    |      |      |              |
    |   0  |   2  |              |
    |      |      |              |
    ---------------       5      |
    |      |      |              |
    |   1  |   3  |              |
    |      |      |              |
    ------------------------------
    |             |              |
    |             |              |
    |             |              |
    |      4      |       6      |
    |             |              |
    |             |              |
    |             |              |
    ------------------------------
.fi
.RE
.SH "DATA STRUCTURE"
The
.B QccWAVSubbandPyramidInt
data structure is defined as:
.RS
.nf

typedef struct
{
  QccString filename;
  QccString magic_num;
  int major_version;
  int minor_version;
  int num_levels;
  int num_rows;
  int num_cols;
  int origin_row;
  int origin_col;
  int subsample_pattern_row;
  int subsample_pattern_col;
  QccMatrixInt matrix;
} QccWAVSubbandPyramidInt;
.fi
.RE
.LP
The fields of
.B QccWAVSubbandPyramidInt
are as follows:
.TP
.I filename
The name of the file.
.TP
.IR magic_num ", " major_version ", " minor_version
The magic number and version of the file.
.TP
.IR num_levels
The number of levels to the subband pyramid; i.e., the
number of levels (scales) of decomposition.
.TP
.IR num_rows ", " num_cols
The overall size of the matrix of coefficients.
.TP
.IR origin_row ", " origin_col
Indicates the row and column indices of the upper-left corner of the matrix of
coefficients.
.TP
.IR subsample_pattern_row ", " subsample_pattern_col
Indicates the subsampling decomposition pattern along the rows and
columns.
.TP
.I matrix
The matrix of coefficients.
.SH "FILE FORMAT"
For reading and writing structures
of type
.BR QccWAVSubbandPyramidInt ,
QccPack provides the
.B SBPI
file format.
This file format starts with an ASCII header followed by
binary data.
The ASCII header consists of magic-number/revision
information
followed by any amount of white space
(space, `\\t' (tab), `\\n' (newline), `\\r' (carriage return)) and/or
comments lines (lines starting with `#').  Following this white space,
additional ASCII
header information is given, separated by blanks and newlines.
Binary data follows this ASCII header information.
Note:  one (and only one) newline 
.B must
immediately follow the last component of ASCII header information before the
start of the binary data.
.LP
The
.B SBPI
file format consists of the following information:
.RS
.sp
.BI SBPI X.X
.br
.I "<white space>"
.br
.I L
.br
.I "C R"
.br
.IR "i11 i12" \|.\|.\|.
.br
.IR "i21 i22" \|.\|.\|.
.br
\|.
.br
\|.
.br
\|.
.br
.sp
.RE
where
.B SBPI
is the magic number,
.I X.X
is the version number,
.I "<white space>"
is white space and/or 
comment lines, 
.I L
is the number of levels of nested decomposition
in the subband pyramid,
.I C
is the number of columns of the subband-pyramid image,
and
.I R
is the number of rows, 
.I imn
is the coefficient for the 
.IR m th
row, 
.IR n th
column of the subband-pyramid image.
.IR L ", " C ", and " R 
are stored in ASCII.  The image itself,
.IR imn ,
is stored as binary integer numbers (4 bytes each, MSB first,
see
.BR QccFileWriteInt (3)).
The value of 
.I L
gives the number of nested (dyadic) decompositions in the 
matrix of coefficients.
If 
.I L
= 0, the image has not been decomposed; if 
.I L
>= 1,
then the 
.I L 
dyadic decompositions are recursively nested in the
upper-left corner of the coefficient matrix.
.SH "ROUTINES"
.B QccWAVSubbandPyramidIntInitialize()
should be called before any use of a
.B QccWAVSubbandPyramidInt
structure.
.B QccWAVSubbandPyramidIntInitialize()
initializes the fields of
.I subband_pyramid
to the following values:
.RS

.IR filename :
.B NULL
string
.br
.IR magic_num :
.B QCCSUBBANDPYRAMIDINT_MAGICNUM
.br
.IR major_version ", " minor_version :
initialized to output of 
.BR QccGetQccPackVersion (3)
.br
.IR num_levels :
0
.br
.IR num_rows :
0
.br
.IR num_cols :
0
.br
.IR origin_row
0
.br
.IR origin_col
0
.br
.IR subsample_pattern_row :
0
.br
.IR subsample_pattern_col :
0
.br
.IR matrix :
.B NULL
.RE
.LP
.B QccWAVSubbandPyramidIntAlloc()
allocates storage space for 
.IR subband_pyramid->matrix .
If 
.I subband_pyramid->matrix
is not
.BR NULL ,
.B QccWAVSubbandPyramidIntAlloc()
returns immediately without changing the state of any memory allocation.
Otherwise,
the 
.I subband_pyramid->matrix
array is allocated.
The fields
.IR subband_pyramid->num_rows 
and
.IR subband_pyramid->num_cols 
must be set prior to calling
.BR QccWAVSubbandPyramidIntAlloc() .
.LP
.B QccWAVSubbandPyramidIntFree()
frees the
.I subband_pyramid->matrix
array previously allocated by
.BR QccWAVSubbandPyramidIntAlloc() .
.LP
.B QccWAVSubbandPyramidIntNumLevelsToNumSubbands()
calculates the number of subbands in a dyadic subband pyramid with
.I num_levels 
levels. This value is 
.I num_levels
* 3 + 1.
.LP
.B QccWAVSubbandPyramidIntNumSubbandsToNumLevels()
calculates the number of levels in a dyadic subband pyramid with
.I num_subbands 
subbands.
.LP
.B QccWAVSubbandPyramidIntCalcLevelFromSubband()
calculates the level of the specified
.I subband
in a subband pyramid with
.I num_levels
levels.
Here,
.I subband
gives the subband number of the subband in the pyramid (see diagrams above).
.LP
.B QccWAVSubbandPyramidIntSubbandSize()
calculates the size of the specified
.I subband
in 
.IR subband_pyramid .
The size of the subband is returned in
.I subband_num_rows
and
.IR subband_num_cols ,
which must be allocated prior to calling
.BR QccWAVSubbandPyramidIntSubbandSize() .
.LP
.B QccWAVSubbandPyramidIntSubbandOffsets()
calculates the location in
.I subband_pyramid->matrix
of the specified
.IR subband .
The row and column offsets (relative to the upper-left corner of
.IR subband_pyramid->matrix )
are returned in
.I row_offset
and
.IR col_offset ,
respectively,
which must be allocated prior to calling
.BR QccWAVSubbandPyramidIntSubbandOffsets() .
.LP
.B QccWAVSubbandPyramidIntSubbandToQccString()
converts the specified
.I subband
number into a descriptive string giving the type of subband
(horizontal, vertical, diagonal, or baseband) and the
level at which the subband resides in the subband pyramid, in a manner
exemplified by the diagrams above.
The string is returned in
.IR qccstring ,
which must be allocated prior to calling
.BR QccWAVSubbandPyramidIntSubbandToQccString() .
.LP
.B QccWAVSubbandPyramidIntPrint()
prints the contents of
.I subband_pyramid
to stdout.
.SH "RETURN VALUE"
These routines return 0 on success, and 1 on failure.
.SH "SEE ALSO"
.BR QccWAVSubbandPyramidIntDWT (3),
.BR QccWAVSubbandPyramidIntInverseDWT (3),
.BR QccPackWAV (3),
.BR QccPack (3)
.LP
A. R. Calderbank, I. Daubechies, W. Sweldens, B.-L. Yeo, "Lossless
Image Compression Using Integer to Integer Wavelet Transforms", in
.IR "Proceedings of the International Conference on Image Processing" ,
Lausanne, Switzerland, pp. 596-599, September 1997.

Z. Xiong, X. Wu, S. Cheng, J. Hua, "Lossy-to-Lossless Compression of
Medical Volumetric Data Using Three-Dimensional Integer Wavelet Transforms,"
.IR "IEEE Transactions on Medical Imaging" ,
vol. 22, pp. 459-470, March 2003.

M. Antonini, M. Barlaud, P. Mathieu, and I. Daubechies,
"Image Coding Using Wavelet Transform,"
.IR "IEEE Transactions on Image Processing" ,
vol. 1, pp. 205-220, April 1992.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

