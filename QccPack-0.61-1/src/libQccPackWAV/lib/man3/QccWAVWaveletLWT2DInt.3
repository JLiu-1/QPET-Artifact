.TH QCCWAVWAVELETLWT2DINT 3 "QCCPACK" ""
.SH NAME
QccWAVWaveletLWT2DInt, QccWAVWaveletInverseLWT2DInt \-
forward and inverse separable 2D integer-valued lazy wavelet transform
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccWAVWaveletLWT2DInt(const QccMatrixInt " input_matrix ", QccMatrixInt " output_matrix ", int " num_rows ", int " num_cols ", int " origin_row ", int " origin_col ", int " subsample_pattern_row ", int " subsample_pattern_col );
.br
.BI "int QccWAVInverseWaveletLWT2DInt(const QccMatrixInt " input_matrix ", QccMatrixInt " output_matrix ", int " num_rows ", int " num_cols ", int " origin_row ", int " origin_col ", int " subsample_pattern_row ", int " subsample_pattern_col );
.SH DESCRIPTION
.B QccWAVWaveletLWT2DInt()
implements a separable lazy wavelet transform (LWT).
Essentially, the
.I input_matrix
is partitioned into four subsets: the even-row-even-column samples,
the even-row-odd-column samples, the odd-row-even-column samples, and
the odd-row-odd-column samples.
These four subsets lie in the four quadrants of
.IR output_matrix .
.LP
.I origin_row
and
.I origin_col
give the row and column index numbers of the upper-left-corner sample of
.IR input_matrix 
and are used to determine the phases of subsampling in each
level of the signal decomposition.
In most cases,
.I input_matrix
starts at (0, 0), so
.I origin_row
and
.I origin_col
are both 0.
.LP
.I subsample_pattern_row
and
.I subsample_pattern_col
may both be either
.B QCCWAVWAVELET_PHASE_EVEN
or
.BR QCCWAVWAVELET_PHASE_ODD ,
indicating whether even- or odd-phase subsampling is desired
along each row and column, respectively.
In the usual case, even subsampling is normally used.
.LP
In the case that
.I num_rows
is even, all four "subbands" of the LWT
have the same number of rows.  On the other hand, if
.I num_rows
is odd, two of the four subbands will be one row longer
than the others. Which subbands will be longer will depend on
whether 
.IR origin_row
is odd or even.
Likewise,
.I num_cols
and
.I origin_col
determine if the subbands have the same number of columns, and
which ones are wider if not.
.LP
.BR QccWAVWaveletLWT2DInt()
is implemented as a separable decomposition using 1D LWTs via calls
to
.BR QccWAVWaveletLWTInt ().
.LP
.BR QccWAVWaveletInverseLWT2DInt()
performs the opposite operation as
.BR QccWAVWaveletLWT2DInt() .
That is, the subbands are extracted from
.I input_matrix
and "interleaved" to produce
.IR output_matrix .
.LP
For both of these routines,
.I output_matrix
must be allocated to sufficient size before calling the routine.
.SH "RETURN VALUES"
Both
.BR QccWAVWaveletLWT2DInt()
and
.BR QccWAVWaveletInverseLWT2DInt()
return 0 on success and 1 on error.
.SH "SEE ALSO"
.BR QccWAVWaveletLWTInt (3),
.BR QccWAVWaveletInverseLWTInt (3),
.BR QccPackWAV (3),
.BR QccPack (3)
.LP
I. Daubechies and W. Sweldens,
"Factoring Wavelet Transforms Into Lifting Steps,"
.IR "J. Fourier Anal. Appl." ,
vol. 4, no. 3, pp. 245-267, 1998.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



