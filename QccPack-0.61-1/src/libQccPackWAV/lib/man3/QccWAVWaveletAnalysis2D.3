.TH QCCWAVWAVELETANALYSIS2D 3 "QCCPACK" ""
.SH NAME
QccWAVWaveletAnalysis2D, QccWAVWaveletSynthesis2D \- 
separable wavelet analysis/synthesis of a 2D signal
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccWAVWaveletAnalysis2D(QccMatrix " matrix ", int " num_rows ", int " num_cols ", int " phase_row ", int " phase_col ", const QccWAVWavelet *" wavelet );
.br
.BI "int QccWAVWaveletSynthesis2D(QccMatrix " matrix ", int " num_rows ", int " num_cols ", int " phase_row ", int " phase_col ", const QccWAVWavelet *" wavelet );
.SH DESCRIPTION
.B QccWAVWaveletAnalysis2D()
performs one level of a separable 2D wavelet decomposition for
a two-dimensional signal,
.IR matrix ,
which is represented as a matrix of
.I num_rows
rows and
.I num_cols
columns.
Essentially,
.BR QccWAVWaveletAnalysis2D()
calls
.BR QccWAVWaveletAnalysis1D (3)
once for each row of the matrix, then
once for each column of the matrix.
.I phase_row
and
.I phase_col
indicate whether the rows and columns, respectively, of the image
start with even- or odd-indexed samples.
Usually, one assumes that the upper-left corner of the image is
indexed as (0, 0) - in this case, both
.I phase_row
and
.I phase_col
would be 
.BR QCCWAVWAVELET_PHASE_EVEN .
In any event,
.I phase_row
is passed as the
.I phase
argument
for each call to
.BR QccWAVWaveletAnalysis1D (3)
for the rows, and similarly for
.I phase_col
for analysis of the columns.
The result of the separable decomposition is returned in 
.IR matrix .
The low-low subband (baseband) is returned in the upper-left quadrant of
.IR matrix ,
the low-high subband (vertical subband) is returned
in the upper-right quadrant,
the high-low subband (horizontal subband) is returned in the
lower-left quadrant, and the
high-high subband (diagonal subband) is returned in the lower-right
quadrant.
.LP
.B QccWAVWaveletSynthesis2D()
performs one level of separable wavelet synthesis
for a 2D signal.
Subbands in 
.I matrix
are assumed to be organized as described above for the output of
.BR QccWAVWaveletAnalysis2D() .
.B QccWAVWaveletSynthesis2D()
calls
.BR QccWAVWaveletSynthesis1D (3)
once for each column then once for each row.
The result of the separable wavelet synthesis
is returned in
.IR matrix .
.LP
Note:
In general, you will probably want to use
.BR QccWAVWaveletDWT2D (3)
and
.BR QccWAVWaveletInverseDWT2D (3)
instead of these routines
for implementing a discrete wavelet transform and its inverse since
.BR QccWAVWaveletDWT2D (3)
and
.BR QccWAVWaveletInverseDWT2D (3)
allow any number of scales, or levels, of decomposition to be
performed.
.SH "RETURN VALUES"
These routines
return 0 on success and 1 on error.
.SH "SEE ALSO"
.BR QccWAVWaveletAnalysis1D (3),
.BR QccWAVWaveletSynthesis1D (3),
.BR QccWAVWaveletDWT2D (3),
.BR QccWAVWaveletInverseDWT2D (3),
.BR QccWAVWavelet (3),
.BR QccPackWAV (3),
.BR QccPack (3)
.LP
M. Antonini, M. Barlaud, P. Mathieu, and I. Daubechies,
"Image Coding Using Wavelet Transform,"
.IR "IEEE Transactions on Image Processing" ,
vol. 1, pp. 205-220, April 1992.
.LP
I. Daubechies and W. Sweldens,
"Factoring Wavelet Transforms Into Lifting Steps,"
.IR "J. Fourier Anal. Appl." ,
vol. 4, no. 3, pp. 245-267, 1998.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



