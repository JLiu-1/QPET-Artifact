.TH QCCENTADAPTIVEGOLOMBENCODECHANNEL 3 "QCCPACK" ""
.SH NAME
QccENTAdaptiveGolombEncodeChannel, QccENTAdaptiveGolombDecodeChannel \- 
adaptive Golomb (Langdon) encoding and decoding of binary channels
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccENTAdaptiveGolombEncodeChannel(const QccChannel *" channel ", QccBitBuffer *" output_buffer ");
.br
.BI "int QccENTAdaptiveGolombDecodeChannel(QccBitBuffer *" input_buffer ", const QccChannel *" channel ");
.SH DESCRIPTION
.BR QccENTAdaptiveGolombEncodeChannel()
encodes the binary symbol stream in
.I channel
using adaptive Golomb coding, outputting the binary codewords to
.IR output_buffer .
.I channel
should not contain any null symbols
(see 
.BR QccChannel (3));
use
.BR QccChannelRemoveNullSymbols (3)
to remove null symbols if needed.
.BR QccENTAdaptiveGolombEncode (3)
is then called to produce the binary coding of the
.IR channel .
.LP
.BR QccENTAdaptiveGolombDecodeChannel()
performs decoding of the bits in the bitstream
.IR input_buffer ,
producing an output stream of binary channel symbols that are stored in
.IR channel .
.I channel
must be allocated prior to calling
.BR QccENTAdaptiveGolombDecodeChannel ();
.BR QccChannelGetBlockSize (3)
is called to find out how many channel symbols are to be decoded from
.IR input_buffer .
.BR QccENTAdaptiveGolombDecodeChannel ()
calls
.BR QccENTAdaptiveGolombDecode (3)
to actually do the adaptive Golomb decoding.
.SH "NOTES"
.BR QccBitBufferFlush (3)
must be called after the call to
.BR QccENTAdaptiveGolombEncodeChannel()
to ensure that the last few bits of the
encoded bitstream are actually written
to the output file.
.LP
.BR QccENTAdaptiveGolombEncode() 
will fail if it encounters an invalid symbol
(i.e., a symbol that is neither 0 or 1).
.LP
Golomb coding originated in the 1966 paper by Golomb; the adaptive
variant described here is due to Langdon.
Apparently, this adaptive Golomb coding is also known as
runlength/Rice coding.
.SH "RETURN VALUE"
These routines return 0 on success, and 1 on failure.
.SH "SEE ALSO"
.BR QccENTAdaptiveGolombEncode (3),
.BR QccENTAdaptiveGolombDecode (3),
.BR QccChannel (3),
.BR QccPackENT (3),
.BR QccPack (3)
.LP
G. G. Langdon, Jr., "An adaptive run-length coding algorithm,"
.IR "IBM Technical Disclosure Bulletin" ,
vol. 26, no. 7B, pp. 3783-3785, December 1983.

S. W. Golomb, "Run-Length Encodings,"
.IR "IEEE Transactions on Information Theory" ,
vol. 12, pp. 399-401, July 1966.
.SH AUTHOR
Written by Yufei Yuan <yuanyufei@hotmail.com>

Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

