.TH QCCENTEXPONENTIALGOLOMBENCODE 3 "QCCPACK" ""
.SH NAME
QccENTExponentialGolombEncode, QccENTExponentialGolombDecode, QccENTExponentialGolombEncodeSymbol, QccENTExponentialGolombDecodeSymbol \- 
exponential-Golomb encoding and decoding
.SH SYNOPSIS
.B #include "libQccPack.h"
.sp
.BI "int QccENTExponentialGolombEncode(QccBitBuffer *" output_buffer ", const int *" symbols ", int " num_symbols ", int " signed_symbols );
.br
.BI "int QccENTExponentialGolombDecode(QccBitBuffer *" input_buffer ", int *" symbols ", int " num_symbols ", int " signed_symbols );
.sp
.BI "int QccENTExponentialGolombEncodeSymbol(QccBitBuffer *" output_buffer ", int " symbol ", int " signed_symbol );
.br
.BI "int QccENTExponentialGolombDecodeSymbol(QccBitBuffer *" input_buffer ", int *" symbol ", int " signed_symbol );
.SH DESCRIPTION
.BR QccENTExponentialGolombEncode()
performs exponential-Golomb coding of the symbol stream in
.IR symbols ,
outputting the binary codewords to
.IR output_buffer .
.I num_symbols
indicates how many symbols are in the symbol stream
(which can be as short as one symbol).
.IR signed_symbols
indicates whether the symbols in the symbol stream are
signed integers
.RI ( signed_symbols " = 1)"
or unsigned integers
.RI ( signed_symbols " = 0)."
.IR output_buffer 
must be a
.BR QccBitBuffer (3)
that has been opened for writing prior to calling
.BR QccENTExponentialGolombEncode() .
After calling
.BR QccENTExponentialGolombEncode() ,
.BR QccBitBufferFlush (3)
must be called to ensure that the last few bits of the
bitstream are actually written to the output file.
.LP
.BR QccENTExponentialGolombDecode()
performs exponential-Golomb decoding of the bits in the bitstream
.IR input_buffer ,
producing an output stream of symbols that are stored in
.IR symbols .
The 
.IR symbols 
array must be allocated with space sufficient for holding
.IR num_symbols 
integers; this allocation must be done prior to calling
.BR QccENTExponentialGolombDecode() .
Additionally,
.IR input_buffer
must be opened for reading prior to calling
.BR QccENTExponentialGolombDecode() .
.LP
.BR QccENTExponentialGolombEncodeSymbol()
and
.BR QccENTExponentialGolombDecodeSymbol()
encode and decode a single symbol.
.BR QccENTExponentialGolombEncode()
and
.BR QccENTExponentialGolombDecode()
are implemented simply as repeated calls to
.BR QccENTExponentialGolombEncodeSymbol()
and
.BR QccENTExponentialGolombDecodeSymbol() ,
respectively.
.SH "NOTES"
Golomb coding was originally proposed by Golomb in 1966, and a special
case of Golomb coding with the Golomb-coding parameter constrained to
be a power of 2 was proposed independently by Rice in 1979, with these
latter codes often called Rice codes or Golomb-Rice codes.
Exponential-Golomb codes were proposed by Teuhola
as another variant of Golomb codes
similar to Rice codes with the property
that the number of codes with a given length grows exponentially
with the length. The implementation of exponential-Golomb coding
follows that described in the H.264 standard (Sec. 9.1).
Although the codeword lengths produced by this implementation are exactly
the same as in H.264, the actual codewords are somewhat different.
.SH "RETURN VALUE"
These routines return 0 on success, and 1 on failure.
.SH "SEE ALSO"
.BR QccBitBuffer (3),
.BR QccPackENT (3),
.BR QccPack (3)
.LP
S. W. Golomb, "Run-Length Encodings,"
.IR "IEEE Transactions on Information Theory" ,
vol. 12, pp. 399-401, July 1966.
.LP
R. F. Rice, "Some Practical Universal Noiseless Coding Techniques,"
Tech. Rep. JPL-79-22, Jet Propulsion Laboratory, Pasadena, CA, March 1979.
.LP
J. Teuhola, "A Compression Method for Clustered Bit-Vectors,"
.IR "Information Processing Letters" ,
vol. 7, pp. 308-311, October 1978.
.LP
ITU-T,
.IR "Advanced Video Coding for Generic Audiovisual Services" ,
May 2003, ITU-T Recommendation H.264.
.SH AUTHOR
Copyright (C) 1997-2016  James E. Fowler
.\"  The programs herein are free software; you can redistribute them an.or
.\"  modify them under the terms of the GNU General Public License
.\"  as published by the Free Software Foundation; either version 2
.\"  of the License, or (at your option) any later version.
.\"  
.\"  These programs are distributed in the hope that they will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License
.\"  along with these programs; if not, write to the Free Software
.\"  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
